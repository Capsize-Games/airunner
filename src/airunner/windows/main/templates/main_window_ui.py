# Form implementation generated from reading ui file '/home/joe/Projects/imagetopixel/airunner/src/airunner/../../src/airunner/windows/main/templates/main_window.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1136, 1036)
        MainWindow.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(8)
        MainWindow.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/icon_256.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setMinimumSize(QtCore.QSize(0, 0))
        self.centralwidget.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_6.setContentsMargins(1, 1, 1, 0)
        self.gridLayout_6.setVerticalSpacing(0)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.widget = QtWidgets.QWidget(parent=self.centralwidget)
        self.widget.setMaximumSize(QtCore.QSize(16777215, 48))
        self.widget.setObjectName("widget")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.gridLayout_6.addWidget(self.widget, 1, 0, 1, 1)
        self.mode_tab_widget = QtWidgets.QTabWidget(parent=self.centralwidget)
        self.mode_tab_widget.setAutoFillBackground(False)
        self.mode_tab_widget.setStyleSheet("QTabWidget#mode_tab_widget::pane { border: 0; background: transparent; }")
        self.mode_tab_widget.setTabShape(QtWidgets.QTabWidget.TabShape.Rounded)
        self.mode_tab_widget.setTabBarAutoHide(False)
        self.mode_tab_widget.setObjectName("mode_tab_widget")
        self.art = QtWidgets.QWidget()
        self.art.setObjectName("art")
        self.gridLayout_15 = QtWidgets.QGridLayout(self.art)
        self.gridLayout_15.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_15.setSpacing(0)
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.main_splitter = QtWidgets.QSplitter(parent=self.art)
        self.main_splitter.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.main_splitter.setOrientation(QtCore.Qt.Orientation.Vertical)
        self.main_splitter.setObjectName("main_splitter")
        self.content_splitter = QtWidgets.QSplitter(parent=self.main_splitter)
        self.content_splitter.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.content_splitter.setObjectName("content_splitter")
        self.generator_widget = GeneratorTabWidget(parent=self.content_splitter)
        self.generator_widget.setObjectName("generator_widget")
        self.center_splitter = QtWidgets.QSplitter(parent=self.content_splitter)
        self.center_splitter.setMinimumSize(QtCore.QSize(0, 0))
        self.center_splitter.setStyleSheet("")
        self.center_splitter.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.center_splitter.setOrientation(QtCore.Qt.Orientation.Vertical)
        self.center_splitter.setObjectName("center_splitter")
        self.canvas_widget = QtWidgets.QWidget(parent=self.center_splitter)
        self.canvas_widget.setMinimumSize(QtCore.QSize(0, 0))
        self.canvas_widget.setObjectName("canvas_widget")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.canvas_widget)
        self.gridLayout_5.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.center_tab = QtWidgets.QTabWidget(parent=self.canvas_widget)
        self.center_tab.setStyleSheet("")
        self.center_tab.setObjectName("center_tab")
        self.tab_canvas = QtWidgets.QWidget()
        self.tab_canvas.setObjectName("tab_canvas")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.tab_canvas)
        self.gridLayout_11.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.canvas_plus_widget = CanvasPlusWidget(parent=self.tab_canvas)
        self.canvas_plus_widget.setStyleSheet("")
        self.canvas_plus_widget.setObjectName("canvas_plus_widget")
        self.gridLayout_11.addWidget(self.canvas_plus_widget, 0, 0, 1, 1)
        self.center_tab.addTab(self.tab_canvas, "")
        self.tab_txt2vid = QtWidgets.QWidget()
        self.tab_txt2vid.setObjectName("tab_txt2vid")
        self.center_tab.addTab(self.tab_txt2vid, "")
        self.tab_shapegif = QtWidgets.QWidget()
        self.tab_shapegif.setObjectName("tab_shapegif")
        self.gridLayout_17 = QtWidgets.QGridLayout(self.tab_shapegif)
        self.gridLayout_17.setObjectName("gridLayout_17")
        self.widget_2 = GifPanelWidget(parent=self.tab_shapegif)
        self.widget_2.setObjectName("widget_2")
        self.gridLayout_17.addWidget(self.widget_2, 0, 0, 1, 1)
        self.center_tab.addTab(self.tab_shapegif, "")
        self.tab_prompt_builder = QtWidgets.QWidget()
        self.tab_prompt_builder.setObjectName("tab_prompt_builder")
        self.gridLayout_16 = QtWidgets.QGridLayout(self.tab_prompt_builder)
        self.gridLayout_16.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_16.setObjectName("gridLayout_16")
        self.prompt_builder = PromptBuilderWidget(parent=self.tab_prompt_builder)
        self.prompt_builder.setObjectName("prompt_builder")
        self.gridLayout_16.addWidget(self.prompt_builder, 0, 0, 1, 1)
        self.center_tab.addTab(self.tab_prompt_builder, "")
        self.gridLayout_5.addWidget(self.center_tab, 0, 0, 1, 1)
        self.scrollArea = QtWidgets.QScrollArea(parent=self.content_splitter)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 446, 855))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.gridLayout = QtWidgets.QGridLayout(self.scrollAreaWidgetContents)
        self.gridLayout.setObjectName("gridLayout")
        self.splitter = QtWidgets.QSplitter(parent=self.scrollAreaWidgetContents)
        self.splitter.setOrientation(QtCore.Qt.Orientation.Vertical)
        self.splitter.setObjectName("splitter")
        self.tool_tab_widget = QtWidgets.QTabWidget(parent=self.splitter)
        self.tool_tab_widget.setObjectName("tool_tab_widget")
        self.tab_embeddings = QtWidgets.QWidget()
        self.tab_embeddings.setObjectName("tab_embeddings")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.tab_embeddings)
        self.gridLayout_9.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.embeddings_container_widget = EmbeddingsContainerWidget(parent=self.tab_embeddings)
        self.embeddings_container_widget.setObjectName("embeddings_container_widget")
        self.gridLayout_9.addWidget(self.embeddings_container_widget, 0, 0, 1, 1)
        self.tool_tab_widget.addTab(self.tab_embeddings, "")
        self.tab_lora = QtWidgets.QWidget()
        self.tab_lora.setObjectName("tab_lora")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.tab_lora)
        self.gridLayout_7.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.lora_container_widget = LoraContainerWidget(parent=self.tab_lora)
        self.lora_container_widget.setObjectName("lora_container_widget")
        self.gridLayout_7.addWidget(self.lora_container_widget, 0, 0, 1, 1)
        self.tool_tab_widget.addTab(self.tab_lora, "")
        self.tab_pen = QtWidgets.QWidget()
        self.tab_pen.setObjectName("tab_pen")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.tab_pen)
        self.gridLayout_8.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.brush_container_widget = BrushContainerWidget(parent=self.tab_pen)
        self.brush_container_widget.setObjectName("brush_container_widget")
        self.gridLayout_8.addWidget(self.brush_container_widget, 0, 0, 1, 1)
        self.tool_tab_widget.addTab(self.tab_pen, "")
        self.tab_active_grid = QtWidgets.QWidget()
        self.tab_active_grid.setObjectName("tab_active_grid")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.tab_active_grid)
        self.gridLayout_12.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.active_grid_settings_widget = ActiveGridSettingsWidget(parent=self.tab_active_grid)
        self.active_grid_settings_widget.setObjectName("active_grid_settings_widget")
        self.gridLayout_12.addWidget(self.active_grid_settings_widget, 0, 0, 1, 1)
        self.tool_tab_widget.addTab(self.tab_active_grid, "")
        self.batches_tab = QtWidgets.QTabWidget(parent=self.splitter)
        self.batches_tab.setObjectName("batches_tab")
        self.tab_deterministic = QtWidgets.QWidget()
        self.tab_deterministic.setObjectName("tab_deterministic")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.tab_deterministic)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.deterministic_widget = DeterministicWidget(parent=self.tab_deterministic)
        self.deterministic_widget.setObjectName("deterministic_widget")
        self.gridLayout_13.addWidget(self.deterministic_widget, 0, 0, 1, 1)
        self.batches_tab.addTab(self.tab_deterministic, "")
        self.tab_standard = QtWidgets.QWidget()
        self.tab_standard.setObjectName("tab_standard")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.tab_standard)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.batch_container_widget = BatchWidget(parent=self.tab_standard)
        self.batch_container_widget.setObjectName("batch_container_widget")
        self.gridLayout_14.addWidget(self.batch_container_widget, 0, 0, 1, 1)
        self.batches_tab.addTab(self.tab_standard, "")
        self.layer_frame = QtWidgets.QFrame(parent=self.splitter)
        self.layer_frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.layer_frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.layer_frame.setObjectName("layer_frame")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.layer_frame)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.layer_widget = LayerContainerWidget(parent=self.layer_frame)
        self.layer_widget.setObjectName("layer_widget")
        self.gridLayout_2.addWidget(self.layer_widget, 0, 0, 1, 1)
        self.gridLayout.addWidget(self.splitter, 0, 0, 1, 1)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.button_menu = QtWidgets.QFrame(parent=self.content_splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Maximum, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_menu.sizePolicy().hasHeightForWidth())
        self.button_menu.setSizePolicy(sizePolicy)
        self.button_menu.setMinimumSize(QtCore.QSize(0, 0))
        self.button_menu.setMaximumSize(QtCore.QSize(65, 16777215))
        self.button_menu.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.button_menu.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.button_menu.setObjectName("button_menu")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.button_menu)
        self.verticalLayout.setContentsMargins(4, 9, 4, 9)
        self.verticalLayout.setObjectName("verticalLayout")
        self.toggle_active_grid_area_button = QtWidgets.QPushButton(parent=self.button_menu)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Maximum, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toggle_active_grid_area_button.sizePolicy().hasHeightForWidth())
        self.toggle_active_grid_area_button.setSizePolicy(sizePolicy)
        self.toggle_active_grid_area_button.setMinimumSize(QtCore.QSize(50, 45))
        self.toggle_active_grid_area_button.setMaximumSize(QtCore.QSize(50, 45))
        self.toggle_active_grid_area_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.toggle_active_grid_area_button.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/light/object-selected-icon.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.toggle_active_grid_area_button.setIcon(icon1)
        self.toggle_active_grid_area_button.setIconSize(QtCore.QSize(18, 18))
        self.toggle_active_grid_area_button.setCheckable(True)
        self.toggle_active_grid_area_button.setFlat(True)
        self.toggle_active_grid_area_button.setObjectName("toggle_active_grid_area_button")
        self.verticalLayout.addWidget(self.toggle_active_grid_area_button)
        self.toggle_brush_button = QtWidgets.QPushButton(parent=self.button_menu)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Maximum, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toggle_brush_button.sizePolicy().hasHeightForWidth())
        self.toggle_brush_button.setSizePolicy(sizePolicy)
        self.toggle_brush_button.setMinimumSize(QtCore.QSize(50, 45))
        self.toggle_brush_button.setMaximumSize(QtCore.QSize(50, 45))
        self.toggle_brush_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.toggle_brush_button.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/light/pencil-icon.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.toggle_brush_button.setIcon(icon2)
        self.toggle_brush_button.setIconSize(QtCore.QSize(18, 18))
        self.toggle_brush_button.setCheckable(True)
        self.toggle_brush_button.setFlat(True)
        self.toggle_brush_button.setObjectName("toggle_brush_button")
        self.verticalLayout.addWidget(self.toggle_brush_button)
        self.toggle_eraser_button = QtWidgets.QPushButton(parent=self.button_menu)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Maximum, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toggle_eraser_button.sizePolicy().hasHeightForWidth())
        self.toggle_eraser_button.setSizePolicy(sizePolicy)
        self.toggle_eraser_button.setMinimumSize(QtCore.QSize(50, 45))
        self.toggle_eraser_button.setMaximumSize(QtCore.QSize(50, 45))
        self.toggle_eraser_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.toggle_eraser_button.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/light/eraser-icon.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.toggle_eraser_button.setIcon(icon3)
        self.toggle_eraser_button.setIconSize(QtCore.QSize(18, 18))
        self.toggle_eraser_button.setCheckable(True)
        self.toggle_eraser_button.setFlat(True)
        self.toggle_eraser_button.setObjectName("toggle_eraser_button")
        self.verticalLayout.addWidget(self.toggle_eraser_button)
        self.line = QtWidgets.QFrame(parent=self.button_menu)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.line.sizePolicy().hasHeightForWidth())
        self.line.setSizePolicy(sizePolicy)
        self.line.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout.addWidget(self.line)
        self.toggle_grid_button = QtWidgets.QPushButton(parent=self.button_menu)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Maximum, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toggle_grid_button.sizePolicy().hasHeightForWidth())
        self.toggle_grid_button.setSizePolicy(sizePolicy)
        self.toggle_grid_button.setMinimumSize(QtCore.QSize(50, 45))
        self.toggle_grid_button.setMaximumSize(QtCore.QSize(50, 45))
        self.toggle_grid_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.toggle_grid_button.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/light/frame-grid-icon.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.toggle_grid_button.setIcon(icon4)
        self.toggle_grid_button.setIconSize(QtCore.QSize(18, 18))
        self.toggle_grid_button.setCheckable(True)
        self.toggle_grid_button.setFlat(True)
        self.toggle_grid_button.setObjectName("toggle_grid_button")
        self.verticalLayout.addWidget(self.toggle_grid_button)
        self.focus_button = QtWidgets.QPushButton(parent=self.button_menu)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Maximum, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.focus_button.sizePolicy().hasHeightForWidth())
        self.focus_button.setSizePolicy(sizePolicy)
        self.focus_button.setMinimumSize(QtCore.QSize(50, 45))
        self.focus_button.setMaximumSize(QtCore.QSize(50, 45))
        self.focus_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.focus_button.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/light/circle-center-icon.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.focus_button.setIcon(icon5)
        self.focus_button.setIconSize(QtCore.QSize(18, 18))
        self.focus_button.setFlat(True)
        self.focus_button.setObjectName("focus_button")
        self.verticalLayout.addWidget(self.focus_button)
        self.safety_checker_button = QtWidgets.QPushButton(parent=self.button_menu)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Maximum, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.safety_checker_button.sizePolicy().hasHeightForWidth())
        self.safety_checker_button.setSizePolicy(sizePolicy)
        self.safety_checker_button.setMinimumSize(QtCore.QSize(50, 45))
        self.safety_checker_button.setMaximumSize(QtCore.QSize(50, 45))
        self.safety_checker_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.safety_checker_button.setText("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/light/adult-sign-icon.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.safety_checker_button.setIcon(icon6)
        self.safety_checker_button.setIconSize(QtCore.QSize(18, 18))
        self.safety_checker_button.setCheckable(True)
        self.safety_checker_button.setFlat(True)
        self.safety_checker_button.setObjectName("safety_checker_button")
        self.verticalLayout.addWidget(self.safety_checker_button)
        self.line_4 = QtWidgets.QFrame(parent=self.button_menu)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.line_4.sizePolicy().hasHeightForWidth())
        self.line_4.setSizePolicy(sizePolicy)
        self.line_4.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_4.setObjectName("line_4")
        self.verticalLayout.addWidget(self.line_4)
        self.settings_button = QtWidgets.QPushButton(parent=self.button_menu)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Maximum, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.settings_button.sizePolicy().hasHeightForWidth())
        self.settings_button.setSizePolicy(sizePolicy)
        self.settings_button.setMinimumSize(QtCore.QSize(50, 45))
        self.settings_button.setMaximumSize(QtCore.QSize(50, 45))
        self.settings_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.settings_button.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icons/light/setting-line-icon.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.settings_button.setIcon(icon7)
        self.settings_button.setIconSize(QtCore.QSize(18, 18))
        self.settings_button.setFlat(True)
        self.settings_button.setObjectName("settings_button")
        self.verticalLayout.addWidget(self.settings_button)
        spacerItem = QtWidgets.QSpacerItem(20, 431, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout.addItem(spacerItem)
        self.bottom_panel_tab_widget = QtWidgets.QTabWidget(parent=self.main_splitter)
        self.bottom_panel_tab_widget.setTabPosition(QtWidgets.QTabWidget.TabPosition.South)
        self.bottom_panel_tab_widget.setObjectName("bottom_panel_tab_widget")
        self.tab_prompt_builder1 = QtWidgets.QWidget()
        self.tab_prompt_builder1.setObjectName("tab_prompt_builder1")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.tab_prompt_builder1)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.bottom_panel_tab_widget.addTab(self.tab_prompt_builder1, "")
        self.gridLayout_15.addWidget(self.main_splitter, 0, 0, 1, 1)
        self.mode_tab_widget.addTab(self.art, "")
        self.text = QtWidgets.QWidget()
        self.text.setObjectName("text")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.text)
        self.gridLayout_10.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.llm_widget = LLMWidget(parent=self.text)
        self.llm_widget.setObjectName("llm_widget")
        self.gridLayout_10.addWidget(self.llm_widget, 0, 0, 1, 1)
        self.mode_tab_widget.addTab(self.text, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.tab_5)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.model_manager = ModelManagerWidget(parent=self.tab_5)
        self.model_manager.setObjectName("model_manager")
        self.gridLayout_4.addWidget(self.model_manager, 0, 0, 1, 1)
        self.mode_tab_widget.addTab(self.tab_5, "")
        self.gridLayout_6.addWidget(self.mode_tab_widget, 2, 0, 1, 1)
        self.header_widget = QtWidgets.QFrame(parent=self.centralwidget)
        self.header_widget.setEnabled(True)
        self.header_widget.setMaximumSize(QtCore.QSize(16777215, 48))
        self.header_widget.setFrameShape(QtWidgets.QFrame.Shape.Panel)
        self.header_widget.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.header_widget.setObjectName("header_widget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.header_widget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.scrollArea_3 = QtWidgets.QScrollArea(parent=self.header_widget)
        self.scrollArea_3.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.scrollArea_3.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.scrollArea_3.setMidLineWidth(0)
        self.scrollArea_3.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarPolicy.ScrollBarAlwaysOff)
        self.scrollArea_3.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarPolicy.ScrollBarAsNeeded)
        self.scrollArea_3.setWidgetResizable(True)
        self.scrollArea_3.setObjectName("scrollArea_3")
        self.scrollAreaWidgetContents_3 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_3.setGeometry(QtCore.QRect(0, 0, 1132, 50))
        self.scrollAreaWidgetContents_3.setObjectName("scrollAreaWidgetContents_3")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.scrollAreaWidgetContents_3)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setSpacing(0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.image_generation_button = QtWidgets.QPushButton(parent=self.scrollAreaWidgetContents_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.image_generation_button.sizePolicy().hasHeightForWidth())
        self.image_generation_button.setSizePolicy(sizePolicy)
        self.image_generation_button.setMinimumSize(QtCore.QSize(48, 48))
        self.image_generation_button.setMaximumSize(QtCore.QSize(48, 48))
        self.image_generation_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.image_generation_button.setText("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/icons/light/image-file-icon.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.image_generation_button.setIcon(icon8)
        self.image_generation_button.setIconSize(QtCore.QSize(32, 32))
        self.image_generation_button.setCheckable(True)
        self.image_generation_button.setFlat(True)
        self.image_generation_button.setObjectName("image_generation_button")
        self.horizontalLayout_2.addWidget(self.image_generation_button)
        self.language_processing_button = QtWidgets.QPushButton(parent=self.scrollAreaWidgetContents_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.language_processing_button.sizePolicy().hasHeightForWidth())
        self.language_processing_button.setSizePolicy(sizePolicy)
        self.language_processing_button.setMinimumSize(QtCore.QSize(48, 48))
        self.language_processing_button.setMaximumSize(QtCore.QSize(48, 48))
        self.language_processing_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.language_processing_button.setText("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/icons/light/edit-document-icon.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.language_processing_button.setIcon(icon9)
        self.language_processing_button.setIconSize(QtCore.QSize(32, 32))
        self.language_processing_button.setCheckable(True)
        self.language_processing_button.setFlat(True)
        self.language_processing_button.setObjectName("language_processing_button")
        self.horizontalLayout_2.addWidget(self.language_processing_button)
        self.model_manager_button = QtWidgets.QPushButton(parent=self.scrollAreaWidgetContents_3)
        self.model_manager_button.setMinimumSize(QtCore.QSize(48, 48))
        self.model_manager_button.setMaximumSize(QtCore.QSize(48, 48))
        self.model_manager_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.model_manager_button.setText("")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/icons/light/tech-icon.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.model_manager_button.setIcon(icon10)
        self.model_manager_button.setIconSize(QtCore.QSize(32, 32))
        self.model_manager_button.setCheckable(True)
        self.model_manager_button.setFlat(True)
        self.model_manager_button.setObjectName("model_manager_button")
        self.horizontalLayout_2.addWidget(self.model_manager_button)
        self.text_generator_header_tools = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_3)
        self.text_generator_header_tools.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.text_generator_header_tools.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.text_generator_header_tools.setObjectName("text_generator_header_tools")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.text_generator_header_tools)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.chat_button = QtWidgets.QPushButton(parent=self.text_generator_header_tools)
        self.chat_button.setMinimumSize(QtCore.QSize(48, 48))
        self.chat_button.setMaximumSize(QtCore.QSize(48, 48))
        self.chat_button.setText("")
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/icons/light/chat-box-icon.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.chat_button.setIcon(icon11)
        self.chat_button.setIconSize(QtCore.QSize(24, 24))
        self.chat_button.setFlat(True)
        self.chat_button.setObjectName("chat_button")
        self.horizontalLayout_5.addWidget(self.chat_button)
        self.llm_preferences_button = QtWidgets.QPushButton(parent=self.text_generator_header_tools)
        self.llm_preferences_button.setMinimumSize(QtCore.QSize(48, 48))
        self.llm_preferences_button.setMaximumSize(QtCore.QSize(48, 48))
        self.llm_preferences_button.setText("")
        self.llm_preferences_button.setIcon(icon7)
        self.llm_preferences_button.setIconSize(QtCore.QSize(24, 24))
        self.llm_preferences_button.setFlat(True)
        self.llm_preferences_button.setObjectName("llm_preferences_button")
        self.horizontalLayout_5.addWidget(self.llm_preferences_button)
        self.llm_settings_button = QtWidgets.QPushButton(parent=self.text_generator_header_tools)
        self.llm_settings_button.setMinimumSize(QtCore.QSize(48, 48))
        self.llm_settings_button.setMaximumSize(QtCore.QSize(48, 48))
        self.llm_settings_button.setText("")
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/icons/light/sliders-icon.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.llm_settings_button.setIcon(icon12)
        self.llm_settings_button.setIconSize(QtCore.QSize(24, 24))
        self.llm_settings_button.setFlat(True)
        self.llm_settings_button.setObjectName("llm_settings_button")
        self.horizontalLayout_5.addWidget(self.llm_settings_button)
        self.llm_quantization_button = QtWidgets.QPushButton(parent=self.text_generator_header_tools)
        self.llm_quantization_button.setMinimumSize(QtCore.QSize(48, 48))
        self.llm_quantization_button.setMaximumSize(QtCore.QSize(48, 48))
        self.llm_quantization_button.setText("")
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/icons/light/clamp-as-indicated-symbol-icon.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.llm_quantization_button.setIcon(icon13)
        self.llm_quantization_button.setIconSize(QtCore.QSize(24, 24))
        self.llm_quantization_button.setFlat(True)
        self.llm_quantization_button.setObjectName("llm_quantization_button")
        self.horizontalLayout_5.addWidget(self.llm_quantization_button)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem1)
        self.horizontalLayout_2.addWidget(self.text_generator_header_tools)
        self.image_generator_header_tools = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents_3)
        self.image_generator_header_tools.setFrameShape(QtWidgets.QFrame.Shape.NoFrame)
        self.image_generator_header_tools.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.image_generator_header_tools.setObjectName("image_generator_header_tools")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.image_generator_header_tools)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setSpacing(0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.image_generators_button = QtWidgets.QPushButton(parent=self.image_generator_header_tools)
        self.image_generators_button.setMinimumSize(QtCore.QSize(48, 48))
        self.image_generators_button.setMaximumSize(QtCore.QSize(48, 48))
        self.image_generators_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.image_generators_button.setText("")
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/icons/light/photo-editor-icon.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.image_generators_button.setIcon(icon14)
        self.image_generators_button.setIconSize(QtCore.QSize(24, 24))
        self.image_generators_button.setCheckable(True)
        self.image_generators_button.setChecked(False)
        self.image_generators_button.setFlat(True)
        self.image_generators_button.setObjectName("image_generators_button")
        self.horizontalLayout_4.addWidget(self.image_generators_button)
        self.txt2gif_button = QtWidgets.QPushButton(parent=self.image_generator_header_tools)
        self.txt2gif_button.setMinimumSize(QtCore.QSize(48, 48))
        self.txt2gif_button.setMaximumSize(QtCore.QSize(48, 48))
        self.txt2gif_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.txt2gif_button.setText("")
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/icons/light/gif-editor-icon.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.txt2gif_button.setIcon(icon15)
        self.txt2gif_button.setIconSize(QtCore.QSize(24, 24))
        self.txt2gif_button.setCheckable(True)
        self.txt2gif_button.setFlat(True)
        self.txt2gif_button.setObjectName("txt2gif_button")
        self.horizontalLayout_4.addWidget(self.txt2gif_button)
        self.txt2vid_button = QtWidgets.QPushButton(parent=self.image_generator_header_tools)
        self.txt2vid_button.setMinimumSize(QtCore.QSize(48, 48))
        self.txt2vid_button.setMaximumSize(QtCore.QSize(48, 48))
        self.txt2vid_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.txt2vid_button.setText("")
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/icons/light/video-editor-icon.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.txt2vid_button.setIcon(icon16)
        self.txt2vid_button.setIconSize(QtCore.QSize(24, 24))
        self.txt2vid_button.setCheckable(True)
        self.txt2vid_button.setFlat(True)
        self.txt2vid_button.setObjectName("txt2vid_button")
        self.horizontalLayout_4.addWidget(self.txt2vid_button)
        self.prompt_builder_button = QtWidgets.QPushButton(parent=self.image_generator_header_tools)
        self.prompt_builder_button.setMinimumSize(QtCore.QSize(48, 48))
        self.prompt_builder_button.setMaximumSize(QtCore.QSize(48, 48))
        self.prompt_builder_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.prompt_builder_button.setText("")
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/icons/light/prompt-editor-icon.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.prompt_builder_button.setIcon(icon17)
        self.prompt_builder_button.setIconSize(QtCore.QSize(24, 24))
        self.prompt_builder_button.setCheckable(True)
        self.prompt_builder_button.setFlat(True)
        self.prompt_builder_button.setObjectName("prompt_builder_button")
        self.horizontalLayout_4.addWidget(self.prompt_builder_button)
        self.image_generator_header_tool_buttons = QtWidgets.QWidget(parent=self.image_generator_header_tools)
        self.image_generator_header_tool_buttons.setObjectName("image_generator_header_tool_buttons")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.image_generator_header_tool_buttons)
        self.horizontalLayout_3.setContentsMargins(6, 0, 6, 0)
        self.horizontalLayout_3.setSpacing(6)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem2)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.section_label = QtWidgets.QLabel(parent=self.image_generator_header_tool_buttons)
        self.section_label.setText("")
        self.section_label.setObjectName("section_label")
        self.horizontalLayout_6.addWidget(self.section_label)
        self.horizontalLayout_3.addLayout(self.horizontalLayout_6)
        self.file_new_button = QtWidgets.QPushButton(parent=self.image_generator_header_tool_buttons)
        self.file_new_button.setMinimumSize(QtCore.QSize(36, 36))
        self.file_new_button.setMaximumSize(QtCore.QSize(36, 36))
        self.file_new_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.file_new_button.setText("")
        icon = QtGui.QIcon.fromTheme("document-new")
        self.file_new_button.setIcon(icon)
        self.file_new_button.setIconSize(QtCore.QSize(24, 24))
        self.file_new_button.setFlat(True)
        self.file_new_button.setObjectName("file_new_button")
        self.horizontalLayout_3.addWidget(self.file_new_button)
        self.open_button = QtWidgets.QPushButton(parent=self.image_generator_header_tool_buttons)
        self.open_button.setMinimumSize(QtCore.QSize(36, 36))
        self.open_button.setMaximumSize(QtCore.QSize(36, 36))
        self.open_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.open_button.setText("")
        icon = QtGui.QIcon.fromTheme("document-open")
        self.open_button.setIcon(icon)
        self.open_button.setIconSize(QtCore.QSize(24, 24))
        self.open_button.setFlat(True)
        self.open_button.setObjectName("open_button")
        self.horizontalLayout_3.addWidget(self.open_button)
        self.save_button = QtWidgets.QPushButton(parent=self.image_generator_header_tool_buttons)
        self.save_button.setMinimumSize(QtCore.QSize(36, 36))
        self.save_button.setMaximumSize(QtCore.QSize(36, 36))
        self.save_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.save_button.setText("")
        icon = QtGui.QIcon.fromTheme("document-save")
        self.save_button.setIcon(icon)
        self.save_button.setIconSize(QtCore.QSize(24, 24))
        self.save_button.setFlat(True)
        self.save_button.setObjectName("save_button")
        self.horizontalLayout_3.addWidget(self.save_button)
        self.export_button = QtWidgets.QPushButton(parent=self.image_generator_header_tool_buttons)
        self.export_button.setMinimumSize(QtCore.QSize(36, 36))
        self.export_button.setMaximumSize(QtCore.QSize(36, 36))
        self.export_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.export_button.setText("")
        icon = QtGui.QIcon.fromTheme("document-send")
        self.export_button.setIcon(icon)
        self.export_button.setIconSize(QtCore.QSize(24, 24))
        self.export_button.setFlat(True)
        self.export_button.setObjectName("export_button")
        self.horizontalLayout_3.addWidget(self.export_button)
        self.line_2 = QtWidgets.QFrame(parent=self.image_generator_header_tool_buttons)
        self.line_2.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_2.setObjectName("line_2")
        self.horizontalLayout_3.addWidget(self.line_2)
        self.undo_button = QtWidgets.QPushButton(parent=self.image_generator_header_tool_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.undo_button.sizePolicy().hasHeightForWidth())
        self.undo_button.setSizePolicy(sizePolicy)
        self.undo_button.setMinimumSize(QtCore.QSize(36, 36))
        self.undo_button.setMaximumSize(QtCore.QSize(36, 36))
        self.undo_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.undo_button.setStyleSheet("border-color: rgb(61, 56, 70);")
        self.undo_button.setText("")
        icon = QtGui.QIcon.fromTheme("edit-undo")
        self.undo_button.setIcon(icon)
        self.undo_button.setIconSize(QtCore.QSize(24, 24))
        self.undo_button.setFlat(True)
        self.undo_button.setObjectName("undo_button")
        self.horizontalLayout_3.addWidget(self.undo_button)
        self.redo_button = QtWidgets.QPushButton(parent=self.image_generator_header_tool_buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.redo_button.sizePolicy().hasHeightForWidth())
        self.redo_button.setSizePolicy(sizePolicy)
        self.redo_button.setMinimumSize(QtCore.QSize(36, 36))
        self.redo_button.setMaximumSize(QtCore.QSize(36, 36))
        self.redo_button.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.redo_button.setStyleSheet("border-color: rgb(61, 56, 70);")
        self.redo_button.setText("")
        icon = QtGui.QIcon.fromTheme("edit-redo")
        self.redo_button.setIcon(icon)
        self.redo_button.setIconSize(QtCore.QSize(24, 24))
        self.redo_button.setFlat(True)
        self.redo_button.setObjectName("redo_button")
        self.horizontalLayout_3.addWidget(self.redo_button)
        self.horizontalLayout_4.addWidget(self.image_generator_header_tool_buttons)
        self.horizontalLayout_2.addWidget(self.image_generator_header_tools)
        self.scrollArea_3.setWidget(self.scrollAreaWidgetContents_3)
        self.horizontalLayout.addWidget(self.scrollArea_3)
        self.gridLayout_6.addWidget(self.header_widget, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1136, 22))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.menubar.setFont(font)
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(parent=self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(parent=self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuFilters = QtWidgets.QMenu(parent=self.menubar)
        self.menuFilters.setObjectName("menuFilters")
        self.menuAbout = QtWidgets.QMenu(parent=self.menubar)
        self.menuAbout.setTearOffEnabled(False)
        self.menuAbout.setObjectName("menuAbout")
        self.menuModel_merge = QtWidgets.QMenu(parent=self.menubar)
        self.menuModel_merge.setObjectName("menuModel_merge")
        self.menuImage = QtWidgets.QMenu(parent=self.menubar)
        self.menuImage.setObjectName("menuImage")
        self.menuView = QtWidgets.QMenu(parent=self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuBrowse_Models_Path = QtWidgets.QMenu(parent=self.menuView)
        self.menuBrowse_Models_Path.setObjectName("menuBrowse_Models_Path")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionNew = QtGui.QAction(parent=MainWindow)
        self.actionNew.setObjectName("actionNew")
        self.actionImport = QtGui.QAction(parent=MainWindow)
        self.actionImport.setObjectName("actionImport")
        self.actionExport = QtGui.QAction(parent=MainWindow)
        self.actionExport.setObjectName("actionExport")
        self.actionCopy = QtGui.QAction(parent=MainWindow)
        self.actionCopy.setObjectName("actionCopy")
        self.actionPaste = QtGui.QAction(parent=MainWindow)
        self.actionPaste.setObjectName("actionPaste")
        self.actionUndo = QtGui.QAction(parent=MainWindow)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap("/home/joe/Projects/imagetopixel/airunner/src/airunner/../../src/airunner/windows/main/templates/../../../../../../../../../../../../../../.designer/src/icons/007-undo.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionUndo.setIcon(icon18)
        self.actionUndo.setWhatsThis("")
        self.actionUndo.setObjectName("actionUndo")
        self.actionRedo = QtGui.QAction(parent=MainWindow)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap("/home/joe/Projects/imagetopixel/airunner/src/airunner/../../src/airunner/windows/main/templates/../../../../../../../../../../../../../../.designer/src/icons/008-redo.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionRedo.setIcon(icon19)
        self.actionRedo.setObjectName("actionRedo")
        self.actionGrid = QtGui.QAction(parent=MainWindow)
        self.actionGrid.setObjectName("actionGrid")
        self.actionPreferences = QtGui.QAction(parent=MainWindow)
        self.actionPreferences.setObjectName("actionPreferences")
        self.actionCanvas_color = QtGui.QAction(parent=MainWindow)
        self.actionCanvas_color.setObjectName("actionCanvas_color")
        self.actionReset_Settings = QtGui.QAction(parent=MainWindow)
        self.actionReset_Settings.setObjectName("actionReset_Settings")
        self.actionResize_on_Paste = QtGui.QAction(parent=MainWindow)
        self.actionResize_on_Paste.setCheckable(True)
        self.actionResize_on_Paste.setObjectName("actionResize_on_Paste")
        self.actionMemory = QtGui.QAction(parent=MainWindow)
        self.actionMemory.setObjectName("actionMemory")
        self.actionAbout = QtGui.QAction(parent=MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionCheck_for_updates = QtGui.QAction(parent=MainWindow)
        self.actionCheck_for_updates.setObjectName("actionCheck_for_updates")
        self.actionOpen = QtGui.QAction(parent=MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionView = QtGui.QAction(parent=MainWindow)
        self.actionView.setObjectName("actionView")
        self.actionAdvanced = QtGui.QAction(parent=MainWindow)
        self.actionAdvanced.setObjectName("actionAdvanced")
        self.actionGaussian_Blur = QtGui.QAction(parent=MainWindow)
        self.actionGaussian_Blur.setEnabled(True)
        self.actionGaussian_Blur.setObjectName("actionGaussian_Blur")
        self.actionBox_Blur = QtGui.QAction(parent=MainWindow)
        self.actionBox_Blur.setObjectName("actionBox_Blur")
        self.actionUnsharp_Mask = QtGui.QAction(parent=MainWindow)
        self.actionUnsharp_Mask.setObjectName("actionUnsharp_Mask")
        self.actionPixel_Art = QtGui.QAction(parent=MainWindow)
        self.actionPixel_Art.setVisible(True)
        self.actionPixel_Art.setObjectName("actionPixel_Art")
        self.actionInvert = QtGui.QAction(parent=MainWindow)
        self.actionInvert.setObjectName("actionInvert")
        self.actionSaturation = QtGui.QAction(parent=MainWindow)
        self.actionSaturation.setVisible(True)
        self.actionSaturation.setObjectName("actionSaturation")
        self.actionColor_Balance = QtGui.QAction(parent=MainWindow)
        self.actionColor_Balance.setCheckable(False)
        self.actionColor_Balance.setEnabled(True)
        self.actionColor_Balance.setVisible(True)
        self.actionColor_Balance.setObjectName("actionColor_Balance")
        self.actionSave = QtGui.QAction(parent=MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionLoad = QtGui.QAction(parent=MainWindow)
        self.actionLoad.setObjectName("actionLoad")
        self.actionQuit = QtGui.QAction(parent=MainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.actionPixel_Art_2 = QtGui.QAction(parent=MainWindow)
        self.actionPixel_Art_2.setObjectName("actionPixel_Art_2")
        self.actionBug_report = QtGui.QAction(parent=MainWindow)
        self.actionBug_report.setObjectName("actionBug_report")
        self.actionReport_vulnerability = QtGui.QAction(parent=MainWindow)
        self.actionReport_vulnerability.setObjectName("actionReport_vulnerability")
        self.actionDiscord = QtGui.QAction(parent=MainWindow)
        self.actionDiscord.setObjectName("actionDiscord")
        self.actionExtensions = QtGui.QAction(parent=MainWindow)
        self.actionExtensions.setObjectName("actionExtensions")
        self.actionShow_image_preview = QtGui.QAction(parent=MainWindow)
        self.actionShow_image_preview.setCheckable(True)
        self.actionShow_image_preview.setObjectName("actionShow_image_preview")
        self.actionImage_to_new_layer = QtGui.QAction(parent=MainWindow)
        self.actionImage_to_new_layer.setCheckable(True)
        self.actionImage_to_new_layer.setObjectName("actionImage_to_new_layer")
        self.actionAuto_export_images = QtGui.QAction(parent=MainWindow)
        self.actionAuto_export_images.setCheckable(True)
        self.actionAuto_export_images.setObjectName("actionAuto_export_images")
        self.actionImage_export_settings = QtGui.QAction(parent=MainWindow)
        self.actionImage_export_settings.setObjectName("actionImage_export_settings")
        self.actionCheck_for_latest_version_on_startup = QtGui.QAction(parent=MainWindow)
        self.actionCheck_for_latest_version_on_startup.setCheckable(True)
        self.actionCheck_for_latest_version_on_startup.setObjectName("actionCheck_for_latest_version_on_startup")
        self.actionModel_Merger = QtGui.QAction(parent=MainWindow)
        self.actionModel_Merger.setObjectName("actionModel_Merger")
        self.actionSaturation_Filter = QtGui.QAction(parent=MainWindow)
        self.actionSaturation_Filter.setObjectName("actionSaturation_Filter")
        self.actionColor_Balance_2 = QtGui.QAction(parent=MainWindow)
        self.actionColor_Balance_2.setObjectName("actionColor_Balance_2")
        self.actionRGB_Noise = QtGui.QAction(parent=MainWindow)
        self.actionRGB_Noise.setObjectName("actionRGB_Noise")
        self.actionGaussian_Blur_2 = QtGui.QAction(parent=MainWindow)
        self.actionGaussian_Blur_2.setObjectName("actionGaussian_Blur_2")
        self.actionBox_Blur_2 = QtGui.QAction(parent=MainWindow)
        self.actionBox_Blur_2.setObjectName("actionBox_Blur_2")
        self.actionRotate_90_clockwise = QtGui.QAction(parent=MainWindow)
        self.actionRotate_90_clockwise.setObjectName("actionRotate_90_clockwise")
        self.actionRotate_90_counter_clockwise = QtGui.QAction(parent=MainWindow)
        self.actionRotate_90_counter_clockwise.setObjectName("actionRotate_90_counter_clockwise")
        self.actionSave_prompt = QtGui.QAction(parent=MainWindow)
        self.actionSave_prompt.setObjectName("actionSave_prompt")
        self.actionShow_Active_Image_Area = QtGui.QAction(parent=MainWindow)
        self.actionShow_Active_Image_Area.setCheckable(True)
        self.actionShow_Active_Image_Area.setObjectName("actionShow_Active_Image_Area")
        self.actionImage_Interpolation = QtGui.QAction(parent=MainWindow)
        self.actionImage_Interpolation.setObjectName("actionImage_Interpolation")
        self.actionImage_interpolation = QtGui.QAction(parent=MainWindow)
        self.actionImage_interpolation.setObjectName("actionImage_interpolation")
        self.actionFilm = QtGui.QAction(parent=MainWindow)
        self.actionFilm.setObjectName("actionFilm")
        self.actionDeterministic_generation = QtGui.QAction(parent=MainWindow)
        self.actionDeterministic_generation.setObjectName("actionDeterministic_generation")
        self.actionDark_mode = QtGui.QAction(parent=MainWindow)
        self.actionDark_mode.setCheckable(True)
        self.actionDark_mode.setObjectName("actionDark_mode")
        self.actionConsole_window = QtGui.QAction(parent=MainWindow)
        self.actionConsole_window.setObjectName("actionConsole_window")
        self.actionSettings = QtGui.QAction(parent=MainWindow)
        self.actionSettings.setObjectName("actionSettings")
        self.actionPrompt_Browser = QtGui.QAction(parent=MainWindow)
        self.actionPrompt_Browser.setObjectName("actionPrompt_Browser")
        self.actionClear_all_prompts = QtGui.QAction(parent=MainWindow)
        self.actionClear_all_prompts.setObjectName("actionClear_all_prompts")
        self.actionUndo_2 = QtGui.QAction(parent=MainWindow)
        self.actionUndo_2.setIcon(icon18)
        self.actionUndo_2.setObjectName("actionUndo_2")
        self.actionRedo_2 = QtGui.QAction(parent=MainWindow)
        self.actionRedo_2.setIcon(icon19)
        self.actionRedo_2.setObjectName("actionRedo_2")
        self.actionCut = QtGui.QAction(parent=MainWindow)
        self.actionCut.setObjectName("actionCut")
        self.actionHalftone = QtGui.QAction(parent=MainWindow)
        self.actionHalftone.setObjectName("actionHalftone")
        self.actionQuick_Export = QtGui.QAction(parent=MainWindow)
        self.actionQuick_Export.setObjectName("actionQuick_Export")
        self.actionRegistration_error = QtGui.QAction(parent=MainWindow)
        self.actionRegistration_error.setObjectName("actionRegistration_error")
        self.actionHuggingface_Cache_manager = QtGui.QAction(parent=MainWindow)
        self.actionHuggingface_Cache_manager.setObjectName("actionHuggingface_Cache_manager")
        self.actionModel_Manager = QtGui.QAction(parent=MainWindow)
        self.actionModel_Manager.setObjectName("actionModel_Manager")
        self.actionModel_Manager_2 = QtGui.QAction(parent=MainWindow)
        self.actionModel_Manager_2.setObjectName("actionModel_Manager_2")
        self.actionControlNet = QtGui.QAction(parent=MainWindow)
        self.actionControlNet.setObjectName("actionControlNet")
        self.actionPrompt_Builder = QtGui.QAction(parent=MainWindow)
        self.actionPrompt_Builder.setObjectName("actionPrompt_Builder")
        self.actionEmbeddings = QtGui.QAction(parent=MainWindow)
        self.actionEmbeddings.setObjectName("actionEmbeddings")
        self.actionLoRA = QtGui.QAction(parent=MainWindow)
        self.actionLoRA.setObjectName("actionLoRA")
        self.actionPen = QtGui.QAction(parent=MainWindow)
        self.actionPen.setObjectName("actionPen")
        self.actionStableDiffusion = QtGui.QAction(parent=MainWindow)
        self.actionStableDiffusion.setObjectName("actionStableDiffusion")
        self.actionKandinsky = QtGui.QAction(parent=MainWindow)
        self.actionKandinsky.setObjectName("actionKandinsky")
        self.actionShap_E = QtGui.QAction(parent=MainWindow)
        self.actionShap_E.setObjectName("actionShap_E")
        self.actionRun_setup_wizard = QtGui.QAction(parent=MainWindow)
        self.actionRun_setup_wizard.setObjectName("actionRun_setup_wizard")
        self.actionBrowse_AI_Runner_Path = QtGui.QAction(parent=MainWindow)
        self.actionBrowse_AI_Runner_Path.setObjectName("actionBrowse_AI_Runner_Path")
        self.actionBrowse_Images_Path = QtGui.QAction(parent=MainWindow)
        self.actionBrowse_Images_Path.setObjectName("actionBrowse_Images_Path")
        self.actionBrowse_Images_Path_2 = QtGui.QAction(parent=MainWindow)
        self.actionBrowse_Images_Path_2.setObjectName("actionBrowse_Images_Path_2")
        self.actionBrowse_Videos_Path = QtGui.QAction(parent=MainWindow)
        self.actionBrowse_Videos_Path.setObjectName("actionBrowse_Videos_Path")
        self.actionBrowse_Gifs_Path = QtGui.QAction(parent=MainWindow)
        self.actionBrowse_Gifs_Path.setObjectName("actionBrowse_Gifs_Path")
        self.actionTxt2img_Img2img_Models = QtGui.QAction(parent=MainWindow)
        self.actionTxt2img_Img2img_Models.setObjectName("actionTxt2img_Img2img_Models")
        self.actionInpaint_Outpaint_Models = QtGui.QAction(parent=MainWindow)
        self.actionInpaint_Outpaint_Models.setObjectName("actionInpaint_Outpaint_Models")
        self.actionDepth2img_Models = QtGui.QAction(parent=MainWindow)
        self.actionDepth2img_Models.setObjectName("actionDepth2img_Models")
        self.actionPix2pix = QtGui.QAction(parent=MainWindow)
        self.actionPix2pix.setObjectName("actionPix2pix")
        self.actionUpscale = QtGui.QAction(parent=MainWindow)
        self.actionUpscale.setObjectName("actionUpscale")
        self.actionSuperresolution = QtGui.QAction(parent=MainWindow)
        self.actionSuperresolution.setObjectName("actionSuperresolution")
        self.actionTxt2vid = QtGui.QAction(parent=MainWindow)
        self.actionTxt2vid.setObjectName("actionTxt2vid")
        self.actionActive_Grid = QtGui.QAction(parent=MainWindow)
        self.actionActive_Grid.setObjectName("actionActive_Grid")
        self.actionDeterministic_Batches = QtGui.QAction(parent=MainWindow)
        self.actionDeterministic_Batches.setObjectName("actionDeterministic_Batches")
        self.actionStandard_Batches = QtGui.QAction(parent=MainWindow)
        self.actionStandard_Batches.setObjectName("actionStandard_Batches")
        self.actionLLM_beta = QtGui.QAction(parent=MainWindow)
        self.actionLLM_beta.setObjectName("actionLLM_beta")
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionLoad)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionUndo)
        self.menuEdit.addAction(self.actionRedo)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionCut)
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionPaste)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionRotate_90_clockwise)
        self.menuEdit.addAction(self.actionRotate_90_counter_clockwise)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionClear_all_prompts)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionSettings)
        self.menuFilters.addSeparator()
        self.menuFilters.addAction(self.actionInvert)
        self.menuFilters.addAction(self.actionFilm)
        self.menuAbout.addAction(self.actionAbout)
        self.menuAbout.addAction(self.actionBug_report)
        self.menuAbout.addAction(self.actionReport_vulnerability)
        self.menuAbout.addAction(self.actionDiscord)
        self.menuModel_merge.addAction(self.actionImage_interpolation)
        self.menuModel_merge.addAction(self.actionModel_Merger)
        self.menuModel_merge.addSeparator()
        self.menuModel_merge.addAction(self.actionStableDiffusion)
        self.menuModel_merge.addAction(self.actionKandinsky)
        self.menuModel_merge.addAction(self.actionShap_E)
        self.menuModel_merge.addSeparator()
        self.menuModel_merge.addAction(self.actionPrompt_Builder)
        self.menuModel_merge.addAction(self.actionControlNet)
        self.menuModel_merge.addAction(self.actionModel_Manager_2)
        self.menuModel_merge.addSeparator()
        self.menuModel_merge.addAction(self.actionEmbeddings)
        self.menuModel_merge.addAction(self.actionLoRA)
        self.menuModel_merge.addAction(self.actionPen)
        self.menuModel_merge.addAction(self.actionActive_Grid)
        self.menuModel_merge.addSeparator()
        self.menuModel_merge.addAction(self.actionDeterministic_Batches)
        self.menuModel_merge.addAction(self.actionStandard_Batches)
        self.menuModel_merge.addSeparator()
        self.menuModel_merge.addAction(self.actionLLM_beta)
        self.menuImage.addAction(self.actionImport)
        self.menuImage.addAction(self.actionExport)
        self.menuImage.addSeparator()
        self.menuImage.addAction(self.actionQuick_Export)
        self.menuBrowse_Models_Path.addAction(self.actionTxt2img_Img2img_Models)
        self.menuBrowse_Models_Path.addAction(self.actionInpaint_Outpaint_Models)
        self.menuBrowse_Models_Path.addAction(self.actionDepth2img_Models)
        self.menuBrowse_Models_Path.addAction(self.actionPix2pix)
        self.menuBrowse_Models_Path.addAction(self.actionUpscale)
        self.menuBrowse_Models_Path.addAction(self.actionTxt2vid)
        self.menuView.addAction(self.actionPrompt_Browser)
        self.menuView.addAction(self.actionHuggingface_Cache_manager)
        self.menuView.addAction(self.actionBrowse_AI_Runner_Path)
        self.menuView.addAction(self.menuBrowse_Models_Path.menuAction())
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionBrowse_Images_Path_2)
        self.menuView.addAction(self.actionBrowse_Videos_Path)
        self.menuView.addAction(self.actionBrowse_Gifs_Path)
        self.menuView.addSeparator()
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuImage.menuAction())
        self.menubar.addAction(self.menuModel_merge.menuAction())
        self.menubar.addAction(self.menuFilters.menuAction())
        self.menubar.addAction(self.menuAbout.menuAction())

        self.retranslateUi(MainWindow)
        self.mode_tab_widget.setCurrentIndex(0)
        self.center_tab.setCurrentIndex(0)
        self.tool_tab_widget.setCurrentIndex(1)
        self.batches_tab.setCurrentIndex(0)
        self.bottom_panel_tab_widget.setCurrentIndex(0)
        self.actionHuggingface_Cache_manager.triggered.connect(MainWindow.action_show_hf_cache_manager) # type: ignore
        self.actionModel_Merger.triggered.connect(MainWindow.action_show_model_merger_window) # type: ignore
        self.actionAbout.triggered.connect(MainWindow.action_show_about_window) # type: ignore
        self.actionKandinsky.triggered.connect(MainWindow.action_show_kandinsky) # type: ignore
        self.actionStableDiffusion.triggered.connect(MainWindow.action_show_stablediffusion) # type: ignore
        self.actionShap_E.triggered.connect(MainWindow.action_show_shape) # type: ignore
        self.actionPrompt_Builder.triggered.connect(MainWindow.action_show_prompt_builder) # type: ignore
        self.actionControlNet.triggered.connect(MainWindow.action_show_controlnet) # type: ignore
        self.actionEmbeddings.triggered.connect(MainWindow.action_show_embeddings) # type: ignore
        self.actionLoRA.triggered.connect(MainWindow.action_show_lora) # type: ignore
        self.actionPen.triggered.connect(MainWindow.action_show_pen) # type: ignore
        self.actionLoad.triggered.connect(MainWindow.action_load_document_triggered) # type: ignore
        self.actionExport.triggered.connect(MainWindow.action_export_image_triggered) # type: ignore
        self.actionNew.triggered.connect(MainWindow.action_new_document_triggered) # type: ignore
        self.actionSave.triggered.connect(MainWindow.action_save_document_triggered) # type: ignore
        self.actionImport.triggered.connect(MainWindow.action_import_image_triggered) # type: ignore
        self.actionQuick_Export.triggered.connect(MainWindow.action_quick_export_image_triggered) # type: ignore
        self.actionQuit.triggered.connect(MainWindow.action_quit_triggered) # type: ignore
        self.actionPaste.triggered.connect(MainWindow.action_paste_image_triggered) # type: ignore
        self.actionCopy.triggered.connect(MainWindow.action_copy_image_triggered) # type: ignore
        self.actionCut.triggered.connect(MainWindow.action_cut_image_triggered) # type: ignore
        self.actionRotate_90_clockwise.triggered.connect(MainWindow.action_rotate_90_clockwise_triggered) # type: ignore
        self.actionRotate_90_counter_clockwise.triggered.connect(MainWindow.action_rotate_90_counterclockwise_triggered) # type: ignore
        self.actionPrompt_Browser.triggered.connect(MainWindow.action_show_prompt_browser_triggered) # type: ignore
        self.actionImage_Interpolation.triggered.connect(MainWindow.action_show_image_interpolation_triggered) # type: ignore
        self.actionClear_all_prompts.triggered.connect(MainWindow.action_clear_all_prompts_triggered) # type: ignore
        self.actionSettings.triggered.connect(MainWindow.action_show_settings) # type: ignore
        self.actionBrowse_AI_Runner_Path.triggered.connect(MainWindow.action_triggered_browse_ai_runner_path) # type: ignore
        self.actionBrowse_Images_Path_2.triggered.connect(MainWindow.action_show_images_path) # type: ignore
        self.actionBrowse_Videos_Path.triggered.connect(MainWindow.action_show_videos_path) # type: ignore
        self.actionBrowse_Gifs_Path.triggered.connect(MainWindow.action_show_gifs_path) # type: ignore
        self.actionTxt2img_Img2img_Models.triggered.connect(MainWindow.action_show_model_path_txt2img) # type: ignore
        self.actionDepth2img_Models.triggered.connect(MainWindow.action_show_model_path_depth2img) # type: ignore
        self.actionInpaint_Outpaint_Models.triggered.connect(MainWindow.action_show_model_path_inpaint) # type: ignore
        self.actionPix2pix.triggered.connect(MainWindow.action_show_model_path_pix2pix) # type: ignore
        self.actionUpscale.triggered.connect(MainWindow.action_show_model_path_upscale) # type: ignore
        self.actionTxt2vid.triggered.connect(MainWindow.action_show_model_path_txt2vid) # type: ignore
        self.tool_tab_widget.currentChanged['int'].connect(MainWindow.tool_tab_index_changed) # type: ignore
        self.bottom_panel_tab_widget.currentChanged['int'].connect(MainWindow.bottom_panel_tab_index_changed) # type: ignore
        self.batches_tab.currentChanged['int'].connect(MainWindow.batches_panel_tab_index_changed) # type: ignore
        self.actionActive_Grid.triggered.connect(MainWindow.action_show_active_grid) # type: ignore
        self.actionModel_Manager_2.triggered.connect(MainWindow.action_show_model_manager) # type: ignore
        self.actionDeterministic_Batches.triggered.connect(MainWindow.action_show_deterministic_batches) # type: ignore
        self.actionStandard_Batches.triggered.connect(MainWindow.action_show_standard_batches) # type: ignore
        self.actionLLM_beta.triggered.connect(MainWindow.action_show_llm) # type: ignore
        self.image_generation_button.pressed.connect(MainWindow.image_generation_toggled) # type: ignore
        self.language_processing_button.pressed.connect(MainWindow.language_processing_toggled) # type: ignore
        self.model_manager_button.pressed.connect(MainWindow.model_manager_toggled) # type: ignore
        self.center_tab.currentChanged['int'].connect(MainWindow.center_panel_tab_index_changed) # type: ignore
        self.save_button.clicked.connect(MainWindow.action_save_document_triggered) # type: ignore
        self.open_button.clicked.connect(MainWindow.action_load_document_triggered) # type: ignore
        self.file_new_button.clicked.connect(MainWindow.action_new_document_triggered) # type: ignore
        self.undo_button.clicked.connect(MainWindow.action_undo_triggered) # type: ignore
        self.redo_button.clicked.connect(MainWindow.action_redo_triggered) # type: ignore
        self.export_button.clicked.connect(MainWindow.action_export_image_triggered) # type: ignore
        self.image_generators_button.pressed.connect(MainWindow.image_generators_toggled) # type: ignore
        self.txt2gif_button.pressed.connect(MainWindow.text_to_gif_toggled) # type: ignore
        self.txt2vid_button.pressed.connect(MainWindow.text_to_video_toggled) # type: ignore
        self.prompt_builder_button.pressed.connect(MainWindow.prompt_builder_toggled) # type: ignore
        self.image_generation_button.released.connect(MainWindow.image_generation_toggled) # type: ignore
        self.language_processing_button.released.connect(MainWindow.language_processing_toggled) # type: ignore
        self.model_manager_button.released.connect(MainWindow.model_manager_toggled) # type: ignore
        self.image_generators_button.released.connect(MainWindow.image_generators_toggled) # type: ignore
        self.txt2gif_button.released.connect(MainWindow.text_to_gif_toggled) # type: ignore
        self.txt2vid_button.released.connect(MainWindow.text_to_video_toggled) # type: ignore
        self.prompt_builder_button.released.connect(MainWindow.prompt_builder_toggled) # type: ignore
        self.safety_checker_button.toggled['bool'].connect(MainWindow.action_toggle_nsfw_filter_triggered) # type: ignore
        self.settings_button.clicked.connect(MainWindow.action_show_settings) # type: ignore
        self.toggle_grid_button.toggled['bool'].connect(MainWindow.action_toggle_grid) # type: ignore
        self.toggle_active_grid_area_button.toggled['bool'].connect(MainWindow.action_toggle_active_grid_area) # type: ignore
        self.toggle_eraser_button.toggled['bool'].connect(MainWindow.action_toggle_eraser) # type: ignore
        self.toggle_brush_button.toggled['bool'].connect(MainWindow.action_toggle_brush) # type: ignore
        self.actionBug_report.triggered.connect(MainWindow.action_open_bug_report) # type: ignore
        self.actionDiscord.triggered.connect(MainWindow.action_open_discord) # type: ignore
        self.actionReport_vulnerability.triggered.connect(MainWindow.action_open_vulnerability_report) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "AI Runner"))
        self.center_tab.setTabText(self.center_tab.indexOf(self.tab_canvas), _translate("MainWindow", "Canvas"))
        self.center_tab.setTabText(self.center_tab.indexOf(self.tab_txt2vid), _translate("MainWindow", "Video"))
        self.center_tab.setTabText(self.center_tab.indexOf(self.tab_shapegif), _translate("MainWindow", "GIF"))
        self.center_tab.setTabText(self.center_tab.indexOf(self.tab_prompt_builder), _translate("MainWindow", "Prompt Builder"))
        self.tool_tab_widget.setTabText(self.tool_tab_widget.indexOf(self.tab_embeddings), _translate("MainWindow", "Embeddings"))
        self.tool_tab_widget.setTabText(self.tool_tab_widget.indexOf(self.tab_lora), _translate("MainWindow", "LoRA"))
        self.tool_tab_widget.setTabText(self.tool_tab_widget.indexOf(self.tab_pen), _translate("MainWindow", "Pen"))
        self.tool_tab_widget.setTabText(self.tool_tab_widget.indexOf(self.tab_active_grid), _translate("MainWindow", "Active Grid"))
        self.batches_tab.setTabText(self.batches_tab.indexOf(self.tab_deterministic), _translate("MainWindow", "Deterministic Batches"))
        self.batches_tab.setTabText(self.batches_tab.indexOf(self.tab_standard), _translate("MainWindow", "Standard Batches"))
        self.toggle_active_grid_area_button.setToolTip(_translate("MainWindow", "Active grid area selection tool"))
        self.toggle_brush_button.setToolTip(_translate("MainWindow", "Pen tool"))
        self.toggle_eraser_button.setToolTip(_translate("MainWindow", "Eraser tool"))
        self.toggle_grid_button.setToolTip(_translate("MainWindow", "Toggle Grid"))
        self.focus_button.setToolTip(_translate("MainWindow", "Recenter canvas"))
        self.safety_checker_button.setToolTip(_translate("MainWindow", "Toggle NSFW"))
        self.settings_button.setToolTip(_translate("MainWindow", "AI Runner Settings"))
        self.bottom_panel_tab_widget.setTabText(self.bottom_panel_tab_widget.indexOf(self.tab_prompt_builder1), _translate("MainWindow", "Terminal"))
        self.mode_tab_widget.setTabText(self.mode_tab_widget.indexOf(self.art), _translate("MainWindow", "Image Generation"))
        self.mode_tab_widget.setTabText(self.mode_tab_widget.indexOf(self.text), _translate("MainWindow", "Language Processing"))
        self.mode_tab_widget.setTabText(self.mode_tab_widget.indexOf(self.tab_5), _translate("MainWindow", "Model Manager"))
        self.image_generation_button.setToolTip(_translate("MainWindow", "Image Generation"))
        self.language_processing_button.setToolTip(_translate("MainWindow", "Language Processing"))
        self.model_manager_button.setToolTip(_translate("MainWindow", "Model manager"))
        self.image_generators_button.setToolTip(_translate("MainWindow", "Image generators"))
        self.txt2gif_button.setToolTip(_translate("MainWindow", "Text to Gif generator (Shap-E)"))
        self.txt2vid_button.setToolTip(_translate("MainWindow", "Text to Video"))
        self.prompt_builder_button.setToolTip(_translate("MainWindow", "Prompt Builder"))
        self.file_new_button.setToolTip(_translate("MainWindow", "New"))
        self.open_button.setToolTip(_translate("MainWindow", "Open"))
        self.save_button.setToolTip(_translate("MainWindow", "Save"))
        self.export_button.setToolTip(_translate("MainWindow", "Export Image"))
        self.undo_button.setToolTip(_translate("MainWindow", "Undo"))
        self.redo_button.setToolTip(_translate("MainWindow", "Redo"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuFilters.setTitle(_translate("MainWindow", "Filters"))
        self.menuAbout.setTitle(_translate("MainWindow", "Help"))
        self.menuModel_merge.setTitle(_translate("MainWindow", "Tools"))
        self.menuImage.setTitle(_translate("MainWindow", "Image"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuBrowse_Models_Path.setTitle(_translate("MainWindow", "Browse Models Paths"))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionNew.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionImport.setText(_translate("MainWindow", "Import image"))
        self.actionImport.setShortcut(_translate("MainWindow", "Ctrl+I"))
        self.actionExport.setText(_translate("MainWindow", "Export image"))
        self.actionExport.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.actionCopy.setText(_translate("MainWindow", "Copy"))
        self.actionCopy.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.actionPaste.setText(_translate("MainWindow", "Paste"))
        self.actionPaste.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.actionUndo.setText(_translate("MainWindow", "Undo"))
        self.actionUndo.setToolTip(_translate("MainWindow", "Undo"))
        self.actionUndo.setShortcut(_translate("MainWindow", "Ctrl+Z"))
        self.actionRedo.setText(_translate("MainWindow", "Redo"))
        self.actionRedo.setShortcut(_translate("MainWindow", "Ctrl+Y"))
        self.actionGrid.setText(_translate("MainWindow", "Grid"))
        self.actionGrid.setToolTip(_translate("MainWindow", "Grid settings"))
        self.actionPreferences.setText(_translate("MainWindow", "Path Preferences"))
        self.actionPreferences.setToolTip(_translate("MainWindow", "Modify model path and more"))
        self.actionCanvas_color.setText(_translate("MainWindow", "Canvas color"))
        self.actionCanvas_color.setToolTip(_translate("MainWindow", "Change the color of the canvas"))
        self.actionReset_Settings.setText(_translate("MainWindow", "Reset Settings to Default"))
        self.actionReset_Settings.setToolTip(_translate("MainWindow", "Reset all settings to default"))
        self.actionResize_on_Paste.setText(_translate("MainWindow", "Resize on Import"))
        self.actionResize_on_Paste.setToolTip(_translate("MainWindow", "Resize the image to active grid area when importing"))
        self.actionMemory.setText(_translate("MainWindow", "Memory"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionCheck_for_updates.setText(_translate("MainWindow", "Check for updates"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionView.setText(_translate("MainWindow", "View"))
        self.actionAdvanced.setText(_translate("MainWindow", "Memory Preferences"))
        self.actionAdvanced.setToolTip(_translate("MainWindow", "Change memory settings"))
        self.actionGaussian_Blur.setText(_translate("MainWindow", "Gaussian Blur"))
        self.actionBox_Blur.setText(_translate("MainWindow", "Box Blur"))
        self.actionUnsharp_Mask.setText(_translate("MainWindow", "Unsharp Mask"))
        self.actionPixel_Art.setText(_translate("MainWindow", "Pixel Art"))
        self.actionInvert.setText(_translate("MainWindow", "Invert"))
        self.actionSaturation.setText(_translate("MainWindow", "Saturation"))
        self.actionColor_Balance.setText(_translate("MainWindow", "Color Balance"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionLoad.setText(_translate("MainWindow", "Open"))
        self.actionLoad.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))
        self.actionQuit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionPixel_Art_2.setText(_translate("MainWindow", "Pixel Art"))
        self.actionBug_report.setText(_translate("MainWindow", "Bug report"))
        self.actionReport_vulnerability.setText(_translate("MainWindow", "Report vulnerability"))
        self.actionDiscord.setText(_translate("MainWindow", "Discord"))
        self.actionExtensions.setText(_translate("MainWindow", "Extensions"))
        self.actionExtensions.setToolTip(_translate("MainWindow", "Install, update and delete extensions"))
        self.actionShow_image_preview.setText(_translate("MainWindow", "Show image preview"))
        self.actionImage_to_new_layer.setText(_translate("MainWindow", "Image to new layer"))
        self.actionImage_to_new_layer.setToolTip(_translate("MainWindow", "Send generated images to new layer"))
        self.actionAuto_export_images.setText(_translate("MainWindow", "Auto export images"))
        self.actionAuto_export_images.setToolTip(_translate("MainWindow", "Automatically export newly generated images to a folder"))
        self.actionImage_export_settings.setText(_translate("MainWindow", "Import / export preferences"))
        self.actionCheck_for_latest_version_on_startup.setText(_translate("MainWindow", "Check for latest version on startup"))
        self.actionModel_Merger.setText(_translate("MainWindow", "Model Merger"))
        self.actionSaturation_Filter.setText(_translate("MainWindow", "Saturation"))
        self.actionColor_Balance_2.setText(_translate("MainWindow", "Color Balance"))
        self.actionRGB_Noise.setText(_translate("MainWindow", "RGB Noise"))
        self.actionGaussian_Blur_2.setText(_translate("MainWindow", "Gaussian Blur"))
        self.actionBox_Blur_2.setText(_translate("MainWindow", "Box Blur"))
        self.actionRotate_90_clockwise.setText(_translate("MainWindow", "Rotate 90° clockwise"))
        self.actionRotate_90_clockwise.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.actionRotate_90_counter_clockwise.setText(_translate("MainWindow", "Rotate 90° counter clockwise"))
        self.actionRotate_90_counter_clockwise.setShortcut(_translate("MainWindow", "Ctrl+Shift+R"))
        self.actionSave_prompt.setText(_translate("MainWindow", "Save prompt"))
        self.actionShow_Active_Image_Area.setText(_translate("MainWindow", "Show Active Image Area"))
        self.actionImage_Interpolation.setText(_translate("MainWindow", "Image Interpolation"))
        self.actionImage_interpolation.setText(_translate("MainWindow", "Image Interpolation"))
        self.actionFilm.setText(_translate("MainWindow", "Film"))
        self.actionDeterministic_generation.setText(_translate("MainWindow", "Deterministic generator"))
        self.actionDark_mode.setText(_translate("MainWindow", "Dark mode"))
        self.actionConsole_window.setText(_translate("MainWindow", "Console window"))
        self.actionSettings.setText(_translate("MainWindow", "Preferences"))
        self.actionPrompt_Browser.setText(_translate("MainWindow", "Prompt browser"))
        self.actionClear_all_prompts.setText(_translate("MainWindow", "Clear all prompts"))
        self.actionClear_all_prompts.setToolTip(_translate("MainWindow", "Remove text from all prompts and negative prompts"))
        self.actionUndo_2.setText(_translate("MainWindow", "Undo"))
        self.actionUndo_2.setShortcut(_translate("MainWindow", "Ctrl+Z"))
        self.actionRedo_2.setText(_translate("MainWindow", "Redo"))
        self.actionRedo_2.setShortcut(_translate("MainWindow", "Ctrl+Y"))
        self.actionCut.setText(_translate("MainWindow", "Cut"))
        self.actionCut.setShortcut(_translate("MainWindow", "Ctrl+X"))
        self.actionHalftone.setText(_translate("MainWindow", "Halftone"))
        self.actionQuick_Export.setText(_translate("MainWindow", "Fast Export"))
        self.actionQuick_Export.setShortcut(_translate("MainWindow", "Ctrl+Shift+E"))
        self.actionRegistration_error.setText(_translate("MainWindow", "Registration error"))
        self.actionHuggingface_Cache_manager.setText(_translate("MainWindow", "Browse Huggingface Cache"))
        self.actionModel_Manager.setText(_translate("MainWindow", "Model Manager"))
        self.actionModel_Manager_2.setText(_translate("MainWindow", "Model Manager"))
        self.actionControlNet.setText(_translate("MainWindow", "ControlNet"))
        self.actionPrompt_Builder.setText(_translate("MainWindow", "Prompt Builder"))
        self.actionEmbeddings.setText(_translate("MainWindow", "Embeddings"))
        self.actionLoRA.setText(_translate("MainWindow", "LoRA"))
        self.actionPen.setText(_translate("MainWindow", "Pen"))
        self.actionStableDiffusion.setText(_translate("MainWindow", "Stable Diffusion"))
        self.actionKandinsky.setText(_translate("MainWindow", "Kandinsky"))
        self.actionShap_E.setText(_translate("MainWindow", "Shap-E"))
        self.actionRun_setup_wizard.setText(_translate("MainWindow", "Run setup wizard"))
        self.actionBrowse_AI_Runner_Path.setText(_translate("MainWindow", "Browse AI Runner Path"))
        self.actionBrowse_Images_Path.setText(_translate("MainWindow", "Browse Images Path"))
        self.actionBrowse_Images_Path_2.setText(_translate("MainWindow", "Browse Images"))
        self.actionBrowse_Videos_Path.setText(_translate("MainWindow", "Browse Videos"))
        self.actionBrowse_Gifs_Path.setText(_translate("MainWindow", "Browse GIFs"))
        self.actionTxt2img_Img2img_Models.setText(_translate("MainWindow", "Txt2img / Img2img"))
        self.actionInpaint_Outpaint_Models.setText(_translate("MainWindow", "Inpaint / Outpaint"))
        self.actionDepth2img_Models.setText(_translate("MainWindow", "Depth2img"))
        self.actionPix2pix.setText(_translate("MainWindow", "Pix2pix"))
        self.actionUpscale.setText(_translate("MainWindow", "Upscale"))
        self.actionSuperresolution.setText(_translate("MainWindow", "Superresolution"))
        self.actionTxt2vid.setText(_translate("MainWindow", "Txt2vid"))
        self.actionActive_Grid.setText(_translate("MainWindow", "Active Grid"))
        self.actionDeterministic_Batches.setText(_translate("MainWindow", "Deterministic Batches"))
        self.actionStandard_Batches.setText(_translate("MainWindow", "Standard Batches"))
        self.actionLLM_beta.setText(_translate("MainWindow", "LLM (beta)"))
from airunner.widgets.active_grid_settings.active_grid_settings_widget import ActiveGridSettingsWidget
from airunner.widgets.batch.batch_widget import BatchWidget
from airunner.widgets.brush.brush_container_widget import BrushContainerWidget
from airunner.widgets.canvas_plus.canvas_plus_widget import CanvasPlusWidget
from airunner.widgets.deterministic.deterministic_widget import DeterministicWidget
from airunner.widgets.embeddings.embeddings_container_widget import EmbeddingsContainerWidget
from airunner.widgets.generator_form.generator_tab_widget import GeneratorTabWidget
from airunner.widgets.gif.gif_panel_widget import GifPanelWidget
from airunner.widgets.layers.layer_container_widget import LayerContainerWidget
from airunner.widgets.llm.llm_widget import LLMWidget
from airunner.widgets.lora.lora_container_widget import LoraContainerWidget
from airunner.widgets.model_manager.model_manager_widget import ModelManagerWidget
from airunner.widgets.prompt_builder.prompt_builder_widget import PromptBuilderWidget
