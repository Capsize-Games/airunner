# Form implementation generated from reading ui file '/home/joe/Projects/imagetopixel/airunner/src/airunner/pyqt/main_window.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1195, 880)
        MainWindow.setMinimumSize(QtCore.QSize(1195, 880))
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setMinimumSize(QtCore.QSize(1000, 512))
        self.centralwidget.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setContentsMargins(9, 0, 0, 0)
        self.gridLayout.setSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.tabWidget = QtWidgets.QTabWidget(parent=self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setMinimumSize(QtCore.QSize(400, 0))
        self.tabWidget.setMaximumSize(QtCore.QSize(400, 16777215))
        self.tabWidget.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.tabWidget.setStyleSheet("")
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.TabPosition.West)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.TabShape.Rounded)
        self.tabWidget.setElideMode(QtCore.Qt.TextElideMode.ElideNone)
        self.tabWidget.setDocumentMode(False)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setMovable(True)
        self.tabWidget.setTabBarAutoHide(False)
        self.tabWidget.setObjectName("tabWidget")
        self.gridLayout.addWidget(self.tabWidget, 3, 0, 1, 1)
        self.right_toolbar = QtWidgets.QWidget(parent=self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Maximum, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.right_toolbar.sizePolicy().hasHeightForWidth())
        self.right_toolbar.setSizePolicy(sizePolicy)
        self.right_toolbar.setMinimumSize(QtCore.QSize(150, 30))
        font = QtGui.QFont()
        font.setItalic(False)
        self.right_toolbar.setFont(font)
        self.right_toolbar.setStyleSheet("border-top-color: rgba(191, 64, 64, 0);")
        self.right_toolbar.setObjectName("right_toolbar")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.right_toolbar)
        self.gridLayout_2.setContentsMargins(9, 0, 9, 0)
        self.gridLayout_2.setHorizontalSpacing(0)
        self.gridLayout_2.setVerticalSpacing(9)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.layers = QtWidgets.QScrollArea(parent=self.right_toolbar)
        self.layers.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.layers.setWidgetResizable(True)
        self.layers.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignTop)
        self.layers.setObjectName("layers")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 239, 408))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollAreaWidgetContents.sizePolicy().hasHeightForWidth())
        self.scrollAreaWidgetContents.setSizePolicy(sizePolicy)
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout.setObjectName("verticalLayout")
        self.layers.setWidget(self.scrollAreaWidgetContents)
        self.gridLayout_2.addWidget(self.layers, 4, 0, 1, 1)
        self.horizontalWidget = QtWidgets.QWidget(parent=self.right_toolbar)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.horizontalWidget.sizePolicy().hasHeightForWidth())
        self.horizontalWidget.setSizePolicy(sizePolicy)
        self.horizontalWidget.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.horizontalWidget.setObjectName("horizontalWidget")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.horizontalWidget)
        self.horizontalLayout_8.setContentsMargins(0, 0, -1, 0)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.new_layer = QtWidgets.QPushButton(parent=self.horizontalWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.new_layer.sizePolicy().hasHeightForWidth())
        self.new_layer.setSizePolicy(sizePolicy)
        self.new_layer.setMinimumSize(QtCore.QSize(32, 32))
        self.new_layer.setStyleSheet("border-color: rgb(61, 56, 70);")
        self.new_layer.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("/home/joe/Projects/imagetopixel/airunner/src/airunner/pyqt/../src/icons/file-add.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon.addPixmap(QtGui.QPixmap("/home/joe/Projects/imagetopixel/airunner/src/airunner/pyqt/../src/icons/file-add.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.On)
        icon.addPixmap(QtGui.QPixmap("/home/joe/Projects/imagetopixel/airunner/src/airunner/pyqt/../src/icons/file-add.png"), QtGui.QIcon.Mode.Disabled, QtGui.QIcon.State.Off)
        icon.addPixmap(QtGui.QPixmap("/home/joe/Projects/imagetopixel/airunner/src/airunner/pyqt/../src/icons/file-add.png"), QtGui.QIcon.Mode.Disabled, QtGui.QIcon.State.On)
        self.new_layer.setIcon(icon)
        self.new_layer.setIconSize(QtCore.QSize(24, 24))
        self.new_layer.setObjectName("new_layer")
        self.horizontalLayout_8.addWidget(self.new_layer)
        self.layer_up_button = QtWidgets.QPushButton(parent=self.horizontalWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.layer_up_button.sizePolicy().hasHeightForWidth())
        self.layer_up_button.setSizePolicy(sizePolicy)
        self.layer_up_button.setMinimumSize(QtCore.QSize(32, 32))
        self.layer_up_button.setStyleSheet("border-color: rgb(61, 56, 70);")
        self.layer_up_button.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("/home/joe/Projects/imagetopixel/airunner/src/airunner/pyqt/../src/icons/arrow-up.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.On)
        self.layer_up_button.setIcon(icon1)
        self.layer_up_button.setIconSize(QtCore.QSize(24, 24))
        self.layer_up_button.setObjectName("layer_up_button")
        self.horizontalLayout_8.addWidget(self.layer_up_button)
        self.layer_down_button = QtWidgets.QPushButton(parent=self.horizontalWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.layer_down_button.sizePolicy().hasHeightForWidth())
        self.layer_down_button.setSizePolicy(sizePolicy)
        self.layer_down_button.setMinimumSize(QtCore.QSize(32, 32))
        self.layer_down_button.setStyleSheet("border-color: rgb(61, 56, 70);")
        self.layer_down_button.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("/home/joe/Projects/imagetopixel/airunner/src/airunner/pyqt/../src/icons/arrow-down.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.On)
        self.layer_down_button.setIcon(icon2)
        self.layer_down_button.setIconSize(QtCore.QSize(24, 24))
        self.layer_down_button.setObjectName("layer_down_button")
        self.horizontalLayout_8.addWidget(self.layer_down_button)
        self.delete_layer_button = QtWidgets.QPushButton(parent=self.horizontalWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.delete_layer_button.sizePolicy().hasHeightForWidth())
        self.delete_layer_button.setSizePolicy(sizePolicy)
        self.delete_layer_button.setMinimumSize(QtCore.QSize(32, 32))
        self.delete_layer_button.setStyleSheet("border-color: rgb(61, 56, 70);")
        self.delete_layer_button.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("/home/joe/Projects/imagetopixel/airunner/src/airunner/pyqt/../src/icons/delete.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.On)
        self.delete_layer_button.setIcon(icon3)
        self.delete_layer_button.setIconSize(QtCore.QSize(24, 24))
        self.delete_layer_button.setObjectName("delete_layer_button")
        self.horizontalLayout_8.addWidget(self.delete_layer_button)
        self.gridLayout_2.addWidget(self.horizontalWidget, 5, 0, 1, 1)
        self.groupBox_4 = QtWidgets.QGroupBox(parent=self.right_toolbar)
        self.groupBox_4.setMinimumSize(QtCore.QSize(0, 25))
        self.groupBox_4.setObjectName("groupBox_4")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.groupBox_4)
        self.gridLayout_3.setContentsMargins(9, 9, 9, 9)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.primary_color_button = QtWidgets.QToolButton(parent=self.groupBox_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.primary_color_button.sizePolicy().hasHeightForWidth())
        self.primary_color_button.setSizePolicy(sizePolicy)
        self.primary_color_button.setText("")
        self.primary_color_button.setObjectName("primary_color_button")
        self.gridLayout_3.addWidget(self.primary_color_button, 0, 0, 1, 1)
        self.gridLayout_2.addWidget(self.groupBox_4, 2, 0, 1, 1)
        self.groupBox_3 = QtWidgets.QGroupBox(parent=self.right_toolbar)
        self.groupBox_3.setMinimumSize(QtCore.QSize(0, 50))
        self.groupBox_3.setSizeIncrement(QtCore.QSize(0, 50))
        self.groupBox_3.setObjectName("groupBox_3")
        self.formLayout_2 = QtWidgets.QFormLayout(self.groupBox_3)
        self.formLayout_2.setObjectName("formLayout_2")
        self.brush_size_slider = QtWidgets.QSlider(parent=self.groupBox_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.brush_size_slider.sizePolicy().hasHeightForWidth())
        self.brush_size_slider.setSizePolicy(sizePolicy)
        self.brush_size_slider.setMinimumSize(QtCore.QSize(150, 0))
        self.brush_size_slider.setMinimum(1)
        self.brush_size_slider.setMaximum(100)
        self.brush_size_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.brush_size_slider.setObjectName("brush_size_slider")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.ItemRole.LabelRole, self.brush_size_slider)
        self.brush_size_spinbox = QtWidgets.QSpinBox(parent=self.groupBox_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Maximum, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.brush_size_spinbox.sizePolicy().hasHeightForWidth())
        self.brush_size_spinbox.setSizePolicy(sizePolicy)
        self.brush_size_spinbox.setMaximumSize(QtCore.QSize(75, 16777215))
        self.brush_size_spinbox.setMinimum(1)
        self.brush_size_spinbox.setMaximum(100)
        self.brush_size_spinbox.setObjectName("brush_size_spinbox")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.ItemRole.FieldRole, self.brush_size_spinbox)
        self.gridLayout_2.addWidget(self.groupBox_3, 1, 0, 1, 1)
        self.groupBox = QtWidgets.QGroupBox(parent=self.right_toolbar)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupBox.sizePolicy().hasHeightForWidth())
        self.groupBox.setSizePolicy(sizePolicy)
        self.groupBox.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.groupBox.setAutoFillBackground(False)
        self.groupBox.setObjectName("groupBox")
        self.formLayout = QtWidgets.QFormLayout(self.groupBox)
        self.formLayout.setObjectName("formLayout")
        self.label_2 = QtWidgets.QLabel(parent=self.groupBox)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.ItemRole.LabelRole, self.label_2)
        self.width_slider = QtWidgets.QSlider(parent=self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.width_slider.sizePolicy().hasHeightForWidth())
        self.width_slider.setSizePolicy(sizePolicy)
        self.width_slider.setMinimumSize(QtCore.QSize(150, 0))
        self.width_slider.setMinimum(8)
        self.width_slider.setMaximum(4096)
        self.width_slider.setSingleStep(8)
        self.width_slider.setPageStep(8)
        self.width_slider.setProperty("value", 8)
        self.width_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.width_slider.setTickPosition(QtWidgets.QSlider.TickPosition.NoTicks)
        self.width_slider.setTickInterval(8)
        self.width_slider.setObjectName("width_slider")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.ItemRole.LabelRole, self.width_slider)
        self.width_spinbox = QtWidgets.QSpinBox(parent=self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Maximum, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.width_spinbox.sizePolicy().hasHeightForWidth())
        self.width_spinbox.setSizePolicy(sizePolicy)
        self.width_spinbox.setMinimumSize(QtCore.QSize(0, 0))
        self.width_spinbox.setMaximumSize(QtCore.QSize(75, 16777215))
        self.width_spinbox.setMinimum(8)
        self.width_spinbox.setMaximum(4096)
        self.width_spinbox.setSingleStep(8)
        self.width_spinbox.setProperty("value", 8)
        self.width_spinbox.setDisplayIntegerBase(10)
        self.width_spinbox.setObjectName("width_spinbox")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.ItemRole.FieldRole, self.width_spinbox)
        self.label = QtWidgets.QLabel(parent=self.groupBox)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label.setObjectName("label")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.ItemRole.LabelRole, self.label)
        self.height_slider = QtWidgets.QSlider(parent=self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.height_slider.sizePolicy().hasHeightForWidth())
        self.height_slider.setSizePolicy(sizePolicy)
        self.height_slider.setMinimumSize(QtCore.QSize(150, 0))
        self.height_slider.setSizeIncrement(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.height_slider.setFont(font)
        self.height_slider.setMinimum(1)
        self.height_slider.setMaximum(4096)
        self.height_slider.setSingleStep(8)
        self.height_slider.setPageStep(8)
        self.height_slider.setProperty("value", 8)
        self.height_slider.setSliderPosition(8)
        self.height_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.height_slider.setTickInterval(8)
        self.height_slider.setObjectName("height_slider")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.ItemRole.LabelRole, self.height_slider)
        self.height_spinbox = QtWidgets.QSpinBox(parent=self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Maximum, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.height_spinbox.sizePolicy().hasHeightForWidth())
        self.height_spinbox.setSizePolicy(sizePolicy)
        self.height_spinbox.setMinimumSize(QtCore.QSize(0, 0))
        self.height_spinbox.setMaximumSize(QtCore.QSize(75, 16777215))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.height_spinbox.setFont(font)
        self.height_spinbox.setMinimum(8)
        self.height_spinbox.setMaximum(4096)
        self.height_spinbox.setSingleStep(8)
        self.height_spinbox.setProperty("value", 8)
        self.height_spinbox.setDisplayIntegerBase(10)
        self.height_spinbox.setObjectName("height_spinbox")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.ItemRole.FieldRole, self.height_spinbox)
        self.gridLayout_2.addWidget(self.groupBox, 0, 0, 1, 1)
        self.gridLayout.addWidget(self.right_toolbar, 3, 2, 1, 1)
        self.frame_2 = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame_2.setMinimumSize(QtCore.QSize(0, 30))
        self.frame_2.setBaseSize(QtCore.QSize(0, 15))
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.status_label = QtWidgets.QLabel(parent=self.frame_2)
        self.status_label.setStyleSheet("color: rgb(119, 118, 123);")
        self.status_label.setText("")
        self.status_label.setObjectName("status_label")
        self.horizontalLayout.addWidget(self.status_label)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.debug_label = QtWidgets.QLabel(parent=self.frame_2)
        self.debug_label.setText("")
        self.debug_label.setObjectName("debug_label")
        self.horizontalLayout.addWidget(self.debug_label)
        self.canvas_position = QtWidgets.QLabel(parent=self.frame_2)
        self.canvas_position.setObjectName("canvas_position")
        self.horizontalLayout.addWidget(self.canvas_position)
        self.gridLayout.addWidget(self.frame_2, 4, 1, 1, 1)
        self.canvas_container = QtWidgets.QFrame(parent=self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.canvas_container.sizePolicy().hasHeightForWidth())
        self.canvas_container.setSizePolicy(sizePolicy)
        self.canvas_container.setMinimumSize(QtCore.QSize(200, 200))
        self.canvas_container.setStyleSheet("")
        self.canvas_container.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.canvas_container.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.canvas_container.setObjectName("canvas_container")
        self.gridLayout.addWidget(self.canvas_container, 3, 1, 1, 1)
        self.widget_2 = QtWidgets.QWidget(parent=self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.widget_2.sizePolicy().hasHeightForWidth())
        self.widget_2.setSizePolicy(sizePolicy)
        self.widget_2.setMinimumSize(QtCore.QSize(200, 50))
        font = QtGui.QFont()
        font.setItalic(False)
        self.widget_2.setFont(font)
        self.widget_2.setStyleSheet("border-left-color: rgba(191, 64, 64, 0);")
        self.widget_2.setObjectName("widget_2")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.widget_2)
        self.horizontalLayout_3.setContentsMargins(0, 0, 9, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.horizontalFrame = QtWidgets.QFrame(parent=self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.horizontalFrame.sizePolicy().hasHeightForWidth())
        self.horizontalFrame.setSizePolicy(sizePolicy)
        self.horizontalFrame.setObjectName("horizontalFrame")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.horizontalFrame)
        self.horizontalLayout_6.setSizeConstraint(QtWidgets.QLayout.SizeConstraint.SetDefaultConstraint)
        self.horizontalLayout_6.setContentsMargins(1, -1, -1, -1)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.active_grid_area_button = QtWidgets.QPushButton(parent=self.horizontalFrame)
        self.active_grid_area_button.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.active_grid_area_button.sizePolicy().hasHeightForWidth())
        self.active_grid_area_button.setSizePolicy(sizePolicy)
        self.active_grid_area_button.setMinimumSize(QtCore.QSize(0, 0))
        self.active_grid_area_button.setMaximumSize(QtCore.QSize(60, 30))
        self.active_grid_area_button.setStyleSheet("border-color: rgb(61, 56, 70);")
        self.active_grid_area_button.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("/home/joe/Projects/imagetopixel/airunner/src/airunner/pyqt/../src/icons/stop.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.active_grid_area_button.setIcon(icon4)
        self.active_grid_area_button.setIconSize(QtCore.QSize(24, 24))
        self.active_grid_area_button.setCheckable(True)
        self.active_grid_area_button.setChecked(False)
        self.active_grid_area_button.setAutoExclusive(False)
        self.active_grid_area_button.setFlat(False)
        self.active_grid_area_button.setObjectName("active_grid_area_button")
        self.horizontalLayout_6.addWidget(self.active_grid_area_button)
        self.eraser_button = QtWidgets.QPushButton(parent=self.horizontalFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.eraser_button.sizePolicy().hasHeightForWidth())
        self.eraser_button.setSizePolicy(sizePolicy)
        self.eraser_button.setMinimumSize(QtCore.QSize(0, 0))
        self.eraser_button.setMaximumSize(QtCore.QSize(60, 30))
        self.eraser_button.setStyleSheet("border-color: rgb(61, 56, 70);")
        self.eraser_button.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("/home/joe/Projects/imagetopixel/airunner/src/airunner/pyqt/../src/icons/eraser.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.eraser_button.setIcon(icon5)
        self.eraser_button.setIconSize(QtCore.QSize(24, 24))
        self.eraser_button.setCheckable(True)
        self.eraser_button.setChecked(False)
        self.eraser_button.setFlat(False)
        self.eraser_button.setObjectName("eraser_button")
        self.horizontalLayout_6.addWidget(self.eraser_button)
        self.brush_button = QtWidgets.QPushButton(parent=self.horizontalFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.brush_button.sizePolicy().hasHeightForWidth())
        self.brush_button.setSizePolicy(sizePolicy)
        self.brush_button.setMinimumSize(QtCore.QSize(0, 0))
        self.brush_button.setMaximumSize(QtCore.QSize(60, 30))
        self.brush_button.setText("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("/home/joe/Projects/imagetopixel/airunner/src/airunner/pyqt/../src/icons/pen.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.brush_button.setIcon(icon6)
        self.brush_button.setIconSize(QtCore.QSize(24, 24))
        self.brush_button.setCheckable(True)
        self.brush_button.setObjectName("brush_button")
        self.horizontalLayout_6.addWidget(self.brush_button)
        self.move_button = QtWidgets.QPushButton(parent=self.horizontalFrame)
        self.move_button.setMaximumSize(QtCore.QSize(60, 30))
        self.move_button.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("/home/joe/Projects/imagetopixel/airunner/src/airunner/pyqt/../src/icons/move.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.On)
        self.move_button.setIcon(icon7)
        self.move_button.setIconSize(QtCore.QSize(24, 24))
        self.move_button.setCheckable(True)
        self.move_button.setObjectName("move_button")
        self.horizontalLayout_6.addWidget(self.move_button)
        self.grid_button = QtWidgets.QPushButton(parent=self.horizontalFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.grid_button.sizePolicy().hasHeightForWidth())
        self.grid_button.setSizePolicy(sizePolicy)
        self.grid_button.setMinimumSize(QtCore.QSize(0, 0))
        self.grid_button.setMaximumSize(QtCore.QSize(60, 30))
        self.grid_button.setStyleSheet("border-color: rgb(61, 56, 70);")
        self.grid_button.setText("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("/home/joe/Projects/imagetopixel/airunner/src/airunner/pyqt/../src/icons/grid.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.grid_button.setIcon(icon8)
        self.grid_button.setIconSize(QtCore.QSize(24, 24))
        self.grid_button.setCheckable(True)
        self.grid_button.setObjectName("grid_button")
        self.horizontalLayout_6.addWidget(self.grid_button)
        self.nsfw_button = QtWidgets.QPushButton(parent=self.horizontalFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.nsfw_button.sizePolicy().hasHeightForWidth())
        self.nsfw_button.setSizePolicy(sizePolicy)
        self.nsfw_button.setMinimumSize(QtCore.QSize(0, 0))
        self.nsfw_button.setMaximumSize(QtCore.QSize(60, 30))
        self.nsfw_button.setStyleSheet("border-color: rgb(61, 56, 70);")
        self.nsfw_button.setText("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("/home/joe/Projects/imagetopixel/airunner/src/airunner/pyqt/../src/icons/underwear.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.nsfw_button.setIcon(icon9)
        self.nsfw_button.setIconSize(QtCore.QSize(24, 24))
        self.nsfw_button.setCheckable(True)
        self.nsfw_button.setChecked(False)
        self.nsfw_button.setFlat(False)
        self.nsfw_button.setObjectName("nsfw_button")
        self.horizontalLayout_6.addWidget(self.nsfw_button)
        self.focus_button = QtWidgets.QPushButton(parent=self.horizontalFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.focus_button.sizePolicy().hasHeightForWidth())
        self.focus_button.setSizePolicy(sizePolicy)
        self.focus_button.setMinimumSize(QtCore.QSize(0, 0))
        self.focus_button.setMaximumSize(QtCore.QSize(60, 30))
        self.focus_button.setStyleSheet("border-color: rgb(61, 56, 70);")
        self.focus_button.setText("")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("/home/joe/Projects/imagetopixel/airunner/src/airunner/pyqt/../src/icons/camera-focus.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.focus_button.setIcon(icon10)
        self.focus_button.setIconSize(QtCore.QSize(24, 24))
        self.focus_button.setObjectName("focus_button")
        self.horizontalLayout_6.addWidget(self.focus_button)
        self.wordballoon_button = QtWidgets.QPushButton(parent=self.horizontalFrame)
        self.wordballoon_button.setMaximumSize(QtCore.QSize(30, 30))
        self.wordballoon_button.setText("")
        self.wordballoon_button.setObjectName("wordballoon_button")
        self.horizontalLayout_6.addWidget(self.wordballoon_button)
        self.undo_button = QtWidgets.QPushButton(parent=self.horizontalFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.undo_button.sizePolicy().hasHeightForWidth())
        self.undo_button.setSizePolicy(sizePolicy)
        self.undo_button.setMinimumSize(QtCore.QSize(0, 0))
        self.undo_button.setMaximumSize(QtCore.QSize(60, 30))
        self.undo_button.setStyleSheet("border-color: rgb(61, 56, 70);")
        self.undo_button.setText("")
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("/home/joe/Projects/imagetopixel/airunner/src/airunner/pyqt/../src/icons/undo.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.undo_button.setIcon(icon11)
        self.undo_button.setIconSize(QtCore.QSize(24, 24))
        self.undo_button.setObjectName("undo_button")
        self.horizontalLayout_6.addWidget(self.undo_button)
        self.redo_button = QtWidgets.QPushButton(parent=self.horizontalFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.redo_button.sizePolicy().hasHeightForWidth())
        self.redo_button.setSizePolicy(sizePolicy)
        self.redo_button.setMinimumSize(QtCore.QSize(0, 0))
        self.redo_button.setMaximumSize(QtCore.QSize(60, 30))
        self.redo_button.setStyleSheet("border-color: rgb(61, 56, 70);")
        self.redo_button.setText("")
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("/home/joe/Projects/imagetopixel/airunner/src/airunner/pyqt/../src/icons/redo.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.redo_button.setIcon(icon12)
        self.redo_button.setIconSize(QtCore.QSize(24, 24))
        self.redo_button.setObjectName("redo_button")
        self.horizontalLayout_6.addWidget(self.redo_button)
        self.horizontalLayout_3.addWidget(self.horizontalFrame)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem1)
        self.darkmode_button = QtWidgets.QPushButton(parent=self.widget_2)
        self.darkmode_button.setMinimumSize(QtCore.QSize(24, 24))
        self.darkmode_button.setText("")
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap("/home/joe/Projects/imagetopixel/airunner/src/airunner/pyqt/../src/icons/weather-night.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.On)
        self.darkmode_button.setIcon(icon13)
        self.darkmode_button.setIconSize(QtCore.QSize(24, 24))
        self.darkmode_button.setObjectName("darkmode_button")
        self.horizontalLayout_3.addWidget(self.darkmode_button)
        self.gridLayout.addWidget(self.widget_2, 0, 0, 1, 3)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1195, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(parent=self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(parent=self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuSettings = QtWidgets.QMenu(parent=self.menubar)
        self.menuSettings.setObjectName("menuSettings")
        self.menuFilters = QtWidgets.QMenu(parent=self.menubar)
        self.menuFilters.setObjectName("menuFilters")
        self.menuBlur = QtWidgets.QMenu(parent=self.menuFilters)
        self.menuBlur.setObjectName("menuBlur")
        self.menuAbout = QtWidgets.QMenu(parent=self.menubar)
        self.menuAbout.setTearOffEnabled(False)
        self.menuAbout.setObjectName("menuAbout")
        self.menuModel_merge = QtWidgets.QMenu(parent=self.menubar)
        self.menuModel_merge.setObjectName("menuModel_merge")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionNew = QtGui.QAction(parent=MainWindow)
        self.actionNew.setObjectName("actionNew")
        self.actionImport = QtGui.QAction(parent=MainWindow)
        self.actionImport.setObjectName("actionImport")
        self.actionExport = QtGui.QAction(parent=MainWindow)
        self.actionExport.setObjectName("actionExport")
        self.actionCopy = QtGui.QAction(parent=MainWindow)
        self.actionCopy.setObjectName("actionCopy")
        self.actionPaste = QtGui.QAction(parent=MainWindow)
        self.actionPaste.setObjectName("actionPaste")
        self.actionUndo = QtGui.QAction(parent=MainWindow)
        self.actionUndo.setObjectName("actionUndo")
        self.actionRedo = QtGui.QAction(parent=MainWindow)
        self.actionRedo.setObjectName("actionRedo")
        self.actionGrid = QtGui.QAction(parent=MainWindow)
        self.actionGrid.setObjectName("actionGrid")
        self.actionPreferences = QtGui.QAction(parent=MainWindow)
        self.actionPreferences.setObjectName("actionPreferences")
        self.actionCanvas_color = QtGui.QAction(parent=MainWindow)
        self.actionCanvas_color.setObjectName("actionCanvas_color")
        self.actionReset_Settings = QtGui.QAction(parent=MainWindow)
        self.actionReset_Settings.setObjectName("actionReset_Settings")
        self.actionResize_on_Paste = QtGui.QAction(parent=MainWindow)
        self.actionResize_on_Paste.setCheckable(True)
        self.actionResize_on_Paste.setObjectName("actionResize_on_Paste")
        self.actionMemory = QtGui.QAction(parent=MainWindow)
        self.actionMemory.setObjectName("actionMemory")
        self.actionAbout = QtGui.QAction(parent=MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionCheck_for_updates = QtGui.QAction(parent=MainWindow)
        self.actionCheck_for_updates.setObjectName("actionCheck_for_updates")
        self.actionOpen = QtGui.QAction(parent=MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionView = QtGui.QAction(parent=MainWindow)
        self.actionView.setObjectName("actionView")
        self.actionAdvanced = QtGui.QAction(parent=MainWindow)
        self.actionAdvanced.setObjectName("actionAdvanced")
        self.actionGaussian_Blur = QtGui.QAction(parent=MainWindow)
        self.actionGaussian_Blur.setEnabled(True)
        self.actionGaussian_Blur.setObjectName("actionGaussian_Blur")
        self.actionBox_Blur = QtGui.QAction(parent=MainWindow)
        self.actionBox_Blur.setObjectName("actionBox_Blur")
        self.actionUnsharp_Mask = QtGui.QAction(parent=MainWindow)
        self.actionUnsharp_Mask.setObjectName("actionUnsharp_Mask")
        self.actionPixel_Art = QtGui.QAction(parent=MainWindow)
        self.actionPixel_Art.setVisible(True)
        self.actionPixel_Art.setObjectName("actionPixel_Art")
        self.actionInvert = QtGui.QAction(parent=MainWindow)
        self.actionInvert.setObjectName("actionInvert")
        self.actionSaturation = QtGui.QAction(parent=MainWindow)
        self.actionSaturation.setVisible(True)
        self.actionSaturation.setObjectName("actionSaturation")
        self.actionColor_Balance = QtGui.QAction(parent=MainWindow)
        self.actionColor_Balance.setEnabled(True)
        self.actionColor_Balance.setVisible(True)
        self.actionColor_Balance.setObjectName("actionColor_Balance")
        self.actionSave = QtGui.QAction(parent=MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionLoad = QtGui.QAction(parent=MainWindow)
        self.actionLoad.setObjectName("actionLoad")
        self.actionQuit = QtGui.QAction(parent=MainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.actionPixel_Art_2 = QtGui.QAction(parent=MainWindow)
        self.actionPixel_Art_2.setObjectName("actionPixel_Art_2")
        self.actionBug_report = QtGui.QAction(parent=MainWindow)
        self.actionBug_report.setObjectName("actionBug_report")
        self.actionReport_vulnerability = QtGui.QAction(parent=MainWindow)
        self.actionReport_vulnerability.setObjectName("actionReport_vulnerability")
        self.actionDiscord = QtGui.QAction(parent=MainWindow)
        self.actionDiscord.setObjectName("actionDiscord")
        self.actionExtensions = QtGui.QAction(parent=MainWindow)
        self.actionExtensions.setObjectName("actionExtensions")
        self.actionShow_image_preview = QtGui.QAction(parent=MainWindow)
        self.actionShow_image_preview.setCheckable(True)
        self.actionShow_image_preview.setObjectName("actionShow_image_preview")
        self.actionImage_to_new_layer = QtGui.QAction(parent=MainWindow)
        self.actionImage_to_new_layer.setCheckable(True)
        self.actionImage_to_new_layer.setObjectName("actionImage_to_new_layer")
        self.actionAuto_export_images = QtGui.QAction(parent=MainWindow)
        self.actionAuto_export_images.setCheckable(True)
        self.actionAuto_export_images.setObjectName("actionAuto_export_images")
        self.actionImage_export_settings = QtGui.QAction(parent=MainWindow)
        self.actionImage_export_settings.setObjectName("actionImage_export_settings")
        self.actionCheck_for_latest_version_on_startup = QtGui.QAction(parent=MainWindow)
        self.actionCheck_for_latest_version_on_startup.setCheckable(True)
        self.actionCheck_for_latest_version_on_startup.setObjectName("actionCheck_for_latest_version_on_startup")
        self.actionModel_Merger = QtGui.QAction(parent=MainWindow)
        self.actionModel_Merger.setObjectName("actionModel_Merger")
        self.actionSaturation_Filter = QtGui.QAction(parent=MainWindow)
        self.actionSaturation_Filter.setObjectName("actionSaturation_Filter")
        self.actionColor_Balance_2 = QtGui.QAction(parent=MainWindow)
        self.actionColor_Balance_2.setObjectName("actionColor_Balance_2")
        self.actionRGB_Noise = QtGui.QAction(parent=MainWindow)
        self.actionRGB_Noise.setObjectName("actionRGB_Noise")
        self.actionGaussian_Blur_2 = QtGui.QAction(parent=MainWindow)
        self.actionGaussian_Blur_2.setObjectName("actionGaussian_Blur_2")
        self.actionBox_Blur_2 = QtGui.QAction(parent=MainWindow)
        self.actionBox_Blur_2.setObjectName("actionBox_Blur_2")
        self.actionRotate_90_clockwise = QtGui.QAction(parent=MainWindow)
        self.actionRotate_90_clockwise.setObjectName("actionRotate_90_clockwise")
        self.actionRotate_90_counter_clockwise = QtGui.QAction(parent=MainWindow)
        self.actionRotate_90_counter_clockwise.setObjectName("actionRotate_90_counter_clockwise")
        self.actionSave_prompt = QtGui.QAction(parent=MainWindow)
        self.actionSave_prompt.setObjectName("actionSave_prompt")
        self.actionPrompt_Browser = QtGui.QAction(parent=MainWindow)
        self.actionPrompt_Browser.setObjectName("actionPrompt_Browser")
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionLoad)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExport)
        self.menuFile.addAction(self.actionImport)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave_prompt)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionPaste)
        self.menuEdit.addAction(self.actionUndo)
        self.menuEdit.addAction(self.actionRedo)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionRotate_90_clockwise)
        self.menuEdit.addAction(self.actionRotate_90_counter_clockwise)
        self.menuSettings.addAction(self.actionPreferences)
        self.menuSettings.addSeparator()
        self.menuSettings.addAction(self.actionGrid)
        self.menuSettings.addAction(self.actionCanvas_color)
        self.menuSettings.addSeparator()
        self.menuSettings.addAction(self.actionCheck_for_latest_version_on_startup)
        self.menuSettings.addAction(self.actionResize_on_Paste)
        self.menuSettings.addAction(self.actionImage_to_new_layer)
        self.menuSettings.addSeparator()
        self.menuSettings.addAction(self.actionImage_export_settings)
        self.menuSettings.addSeparator()
        self.menuSettings.addAction(self.actionAdvanced)
        self.menuSettings.addSeparator()
        self.menuSettings.addAction(self.actionReset_Settings)
        self.menuBlur.addSeparator()
        self.menuBlur.addAction(self.actionGaussian_Blur_2)
        self.menuBlur.addAction(self.actionBox_Blur_2)
        self.menuFilters.addAction(self.menuBlur.menuAction())
        self.menuFilters.addSeparator()
        self.menuFilters.addAction(self.actionColor_Balance)
        self.menuFilters.addAction(self.actionSaturation_Filter)
        self.menuFilters.addAction(self.actionUnsharp_Mask)
        self.menuFilters.addAction(self.actionRGB_Noise)
        self.menuFilters.addAction(self.actionPixel_Art)
        self.menuFilters.addSeparator()
        self.menuFilters.addAction(self.actionInvert)
        self.menuAbout.addAction(self.actionAbout)
        self.menuAbout.addAction(self.actionBug_report)
        self.menuAbout.addAction(self.actionReport_vulnerability)
        self.menuAbout.addAction(self.actionDiscord)
        self.menuModel_merge.addAction(self.actionModel_Merger)
        self.menuModel_merge.addSeparator()
        self.menuModel_merge.addAction(self.actionPrompt_Browser)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuSettings.menuAction())
        self.menubar.addAction(self.menuModel_merge.menuAction())
        self.menubar.addAction(self.menuFilters.menuAction())
        self.menubar.addAction(self.menuAbout.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(-1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "AI Runner"))
        self.new_layer.setToolTip(_translate("MainWindow", "Create a new layer"))
        self.groupBox_4.setTitle(_translate("MainWindow", "Brush color"))
        self.groupBox_3.setTitle(_translate("MainWindow", "Brush size"))
        self.groupBox.setTitle(_translate("MainWindow", "Active grid area"))
        self.label_2.setText(_translate("MainWindow", "Width"))
        self.label.setText(_translate("MainWindow", "Height"))
        self.canvas_position.setText(_translate("MainWindow", "0, 0"))
        self.active_grid_area_button.setToolTip(_translate("MainWindow", "Active Grid Area"))
        self.active_grid_area_button.setShortcut(_translate("MainWindow", "M"))
        self.eraser_button.setToolTip(_translate("MainWindow", "Eraser"))
        self.eraser_button.setShortcut(_translate("MainWindow", "E"))
        self.brush_button.setToolTip(_translate("MainWindow", "Pen"))
        self.brush_button.setStyleSheet(_translate("MainWindow", "border-color: rgb(61, 56, 70);"))
        self.brush_button.setShortcut(_translate("MainWindow", "B"))
        self.move_button.setStyleSheet(_translate("MainWindow", "border-color: rgb(61, 56, 70);"))
        self.grid_button.setToolTip(_translate("MainWindow", "Toggle Grid"))
        self.grid_button.setShortcut(_translate("MainWindow", "G"))
        self.nsfw_button.setToolTip(_translate("MainWindow", "Toggle NSFW Filter"))
        self.focus_button.setToolTip(_translate("MainWindow", "Recenter Canvas"))
        self.undo_button.setToolTip(_translate("MainWindow", "Undo"))
        self.redo_button.setToolTip(_translate("MainWindow", "Redo"))
        self.darkmode_button.setToolTip(_translate("MainWindow", "Toggle dark mode"))
        self.darkmode_button.setStyleSheet(_translate("MainWindow", "border-color: rgb(61, 56, 70);"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuSettings.setTitle(_translate("MainWindow", "Settings"))
        self.menuFilters.setTitle(_translate("MainWindow", "Filters"))
        self.menuBlur.setTitle(_translate("MainWindow", "Blur"))
        self.menuAbout.setTitle(_translate("MainWindow", "Help"))
        self.menuModel_merge.setTitle(_translate("MainWindow", "Tools"))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionNew.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionImport.setText(_translate("MainWindow", "Import image"))
        self.actionImport.setShortcut(_translate("MainWindow", "Ctrl+I"))
        self.actionExport.setText(_translate("MainWindow", "Export image"))
        self.actionExport.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.actionCopy.setText(_translate("MainWindow", "Copy"))
        self.actionCopy.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.actionPaste.setText(_translate("MainWindow", "Paste"))
        self.actionPaste.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.actionUndo.setText(_translate("MainWindow", "Undo"))
        self.actionUndo.setShortcut(_translate("MainWindow", "Ctrl+Z"))
        self.actionRedo.setText(_translate("MainWindow", "Redo"))
        self.actionRedo.setShortcut(_translate("MainWindow", "Ctrl+Y"))
        self.actionGrid.setText(_translate("MainWindow", "Grid"))
        self.actionGrid.setToolTip(_translate("MainWindow", "Grid settings"))
        self.actionPreferences.setText(_translate("MainWindow", "Path Preferences"))
        self.actionPreferences.setToolTip(_translate("MainWindow", "Modify model path and more"))
        self.actionCanvas_color.setText(_translate("MainWindow", "Canvas color"))
        self.actionCanvas_color.setToolTip(_translate("MainWindow", "Change the color of the canvas"))
        self.actionReset_Settings.setText(_translate("MainWindow", "Reset Settings to Default"))
        self.actionReset_Settings.setToolTip(_translate("MainWindow", "Reset all settings to default"))
        self.actionResize_on_Paste.setText(_translate("MainWindow", "Resize on Import"))
        self.actionResize_on_Paste.setToolTip(_translate("MainWindow", "Resize the image to active grid area when importing"))
        self.actionMemory.setText(_translate("MainWindow", "Memory"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionCheck_for_updates.setText(_translate("MainWindow", "Check for updates"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionView.setText(_translate("MainWindow", "View"))
        self.actionAdvanced.setText(_translate("MainWindow", "Memory Preferences"))
        self.actionAdvanced.setToolTip(_translate("MainWindow", "Change memory settings"))
        self.actionGaussian_Blur.setText(_translate("MainWindow", "Gaussian Blur"))
        self.actionBox_Blur.setText(_translate("MainWindow", "Box Blur"))
        self.actionUnsharp_Mask.setText(_translate("MainWindow", "Unsharp Mask"))
        self.actionPixel_Art.setText(_translate("MainWindow", "Pixel Art"))
        self.actionInvert.setText(_translate("MainWindow", "Invert"))
        self.actionSaturation.setText(_translate("MainWindow", "Saturation"))
        self.actionColor_Balance.setText(_translate("MainWindow", "Color Balance"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionLoad.setText(_translate("MainWindow", "Open"))
        self.actionLoad.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))
        self.actionQuit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionPixel_Art_2.setText(_translate("MainWindow", "Pixel Art"))
        self.actionBug_report.setText(_translate("MainWindow", "Bug report"))
        self.actionReport_vulnerability.setText(_translate("MainWindow", "Report vulnerability"))
        self.actionDiscord.setText(_translate("MainWindow", "Discord"))
        self.actionExtensions.setText(_translate("MainWindow", "Extensions"))
        self.actionExtensions.setToolTip(_translate("MainWindow", "Install, update and delete extensions"))
        self.actionShow_image_preview.setText(_translate("MainWindow", "Show image preview"))
        self.actionImage_to_new_layer.setText(_translate("MainWindow", "Image to new layer"))
        self.actionImage_to_new_layer.setToolTip(_translate("MainWindow", "Send generated images to new layer"))
        self.actionAuto_export_images.setText(_translate("MainWindow", "Auto export images"))
        self.actionAuto_export_images.setToolTip(_translate("MainWindow", "Automatically export newly generated images to a folder"))
        self.actionImage_export_settings.setText(_translate("MainWindow", "Import / export preferences"))
        self.actionCheck_for_latest_version_on_startup.setText(_translate("MainWindow", "Check for latest version on startup"))
        self.actionModel_Merger.setText(_translate("MainWindow", "Model Merger"))
        self.actionSaturation_Filter.setText(_translate("MainWindow", "Saturation"))
        self.actionColor_Balance_2.setText(_translate("MainWindow", "Color Balance"))
        self.actionRGB_Noise.setText(_translate("MainWindow", "RGB Noise"))
        self.actionGaussian_Blur_2.setText(_translate("MainWindow", "Gaussian Blur"))
        self.actionBox_Blur_2.setText(_translate("MainWindow", "Box Blur"))
        self.actionRotate_90_clockwise.setText(_translate("MainWindow", "Rotate 90° clockwise"))
        self.actionRotate_90_clockwise.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.actionRotate_90_counter_clockwise.setText(_translate("MainWindow", "Rotate 90° counter clockwise"))
        self.actionRotate_90_counter_clockwise.setShortcut(_translate("MainWindow", "Ctrl+Shift+R"))
        self.actionSave_prompt.setText(_translate("MainWindow", "Save prompt"))
        self.actionPrompt_Browser.setText(_translate("MainWindow", "Prompt Browser"))
